	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_optix_UpdateWindow_default
_optix_UpdateWindow_default:
	call	__frameset0
	ld	iy, (ix + 6)
	or	a, a
	sbc	hl, hl
	ld	e, 1
	ld	a, (iy + 42)
	xor	a, e
	bit	0, a
	jq	z, BB0_1
	ld	a, (iy + 14)
	xor	a, e
	bit	0, a
	jq	nz, BB0_10
	push	hl
	call	_optix_DefaultKeyIsDown
	ld	de, (ix + 6)
	pop	hl
	and	a, 1
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB0_10
	push	de
	call	_optix_MoveWidgetToTop
	ld	iy, (ix + 6)
	ld	e, 1
	pop	hl
	ld	(iy + 42), 1
	ld	(iy + 17), 1
	ld	hl, (_current_context)
	ld	hl, (hl)
	ld	a, (hl)
	xor	a, e
	xor	a, e
	bit	0, a
	jq	nz, BB0_10
	ld	iy, (iy + 27)
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB0_10
BB0_6:
	ld	hl, (iy)
	push	hl
	pop	bc
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB0_10
	lea	hl, iy
	push	bc
	pop	iy
	ld	a, (iy + 16)
	push	hl
	pop	iy
	xor	a, e
	lea	iy, iy + 3
	bit	0, a
	jq	nz, BB0_6
	push	bc
	call	_optix_SetCurrentSelection
	jq	BB0_9
BB0_1:
	ld	hl, (iy + 27)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	push	hl
	call	nz, _optix_UpdateStack
BB0_9:
	pop	hl
BB0_10:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_MoveWidgetToTop
_optix_MoveWidgetToTop:
	ld	hl, -15
	call	__frameset
	ld	de, (ix + 6)
	ld	iy, (_current_context)
	ld	hl, (iy + 15)
	push	de
	push	hl
	call	_optix_GetElementInStackByAddress
	ld	(ix - 3), hl
	pop	hl
	pop	hl
	ld	iy, (_current_context)
	ld	hl, (iy + 15)
	push	hl
	call	_optix_GetNumElementsInStack
	pop	de
	ld	de, 0
	ld	e, l
	ld	d, h
	ld	iy, (_current_context)
	ld	iy, (iy + 15)
	ld	(ix - 6), de
	dec	de
	push	de
	pop	hl
	ld	bc, 3
	call	__imulu
	ld	(ix - 9), hl
	ld	hl, (ix - 3)
	ld	bc, -1
	or	a, a
	sbc	hl, bc
	jq	z, BB1_7
	ld	(ix - 12), de
	ld	(ix - 15), iy
	lea	hl, iy
	ld	de, (ix - 9)
	add	hl, de
	ld	iy, (hl)
	ld	e, (iy)
	ld	a, e
	and	a, -2
	lea	hl, iy
	ld	bc, (ix + 6)
	or	a, a
	sbc	hl, bc
	jq	z, BB1_6
	cp	a, 4
	jq	nz, BB1_6
	ld	a, e
	cp	a, 4
	lea	hl, iy
	jq	z, BB1_5
	ld	hl, (iy + 30)
BB1_5:
	lea	de, iy
	push	hl
	pop	iy
	ld	(iy + 42), 0
	ld	(iy + 17), 1
	push	de
	pop	iy
	ld	(iy + 17), 1
BB1_6:
	ld	hl, (ix - 6)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	call	_optix_RemoveElementInStack
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (_current_context)
	ld	iy, (iy + 15)
	ld	hl, (ix - 12)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, (ix + 6)
	ld	(iy), hl
	ld	iy, (_current_context)
	ld	iy, (iy + 15)
	ld	hl, (ix - 6)
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, 0
	ld	(iy), hl
BB1_7:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_RenderWindow_default
_optix_RenderWindow_default:
	ld	hl, -6
	call	__frameset
	ld	iy, (ix + 6)
	ld	l, 1
	ld	a, (iy + 15)
	xor	a, l
	bit	0, a
	jq	nz, BB2_4
	ld	a, (iy + 17)
	xor	a, l
	bit	0, a
	jq	nz, BB2_3
	ld.sis	bc, 2
	ld	hl, (iy + 1)
	dec.sis	hl
	ld	(ix - 3), hl
	ld	e, (iy + 4)
	dec	e
	ld	hl, (iy + 7)
	add.sis	hl, bc
	ld	a, (iy + 9)
	add	a, 2
	ld	c, a
	ld	(ix - 6), bc
	ld	iy, 8
	push	iy
	ld	bc, 7
	push	bc
	ld	bc, 3
	push	bc
	ld	bc, (ix - 6)
	push	bc
	push	hl
	ld	l, e
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_optix_OutlinedRectangle_WithBevel
	ld	iy, (ix + 6)
	ld	hl, 21
	add	hl, sp
	ld	sp, hl
BB2_3:
	ld	hl, (iy + 27)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	push	hl
	call	nz, _optix_RenderStack
	pop	hl
BB2_4:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_UpdateWindowTitleBar_default
_optix_UpdateWindowTitleBar_default:
	ld	hl, -12
	call	__frameset
	ld	iy, (ix + 6)
	ld	de, 0
	ld	hl, (iy + 30)
	ld	(ix - 3), hl
	ld	c, 1
	ld	a, (iy + 17)
	xor	a, c
	bit	0, a
	jq	z, BB3_1
	ld	hl, (ix - 3)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB3_2
	ld	hl, 42
	ld	a, (hl)
	ld	iy, (ix + 6)
	jq	BB3_11
BB3_1:
	ld	iy, (ix - 3)
	ld	(iy + 17), 1
BB3_2:
	ld	iy, (ix - 3)
	ld	hl, (iy + 24)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB3_4
	ld	de, (ix - 3)
	push	de
	call	__indcallhl
	ld	c, 1
	ld	de, 0
	ld	iy, (ix + 6)
	pop	hl
BB3_4:
	ld	iy, (ix - 3)
	ld	a, (iy + 17)
	xor	a, c
	bit	0, a
	ld	iy, (ix + 6)
	jq	nz, BB3_6
	ld	(iy + 17), 1
BB3_6:
	ld	a, (iy + 33)
	xor	a, c
	xor	a, c
	bit	0, a
	jq	nz, BB3_8
	lea	hl, iy
	ld	iy, (ix - 3)
	ld	a, (iy + 42)
	xor	a, c
	bit	0, a
	push	hl
	call	z, _optix_MoveWidgetToTop
	ld	iy, (ix + 6)
	pop	hl
	ld	de, 0
	ld	c, 1
BB3_8:
	lea	hl, iy
	ld	iy, (ix - 3)
	ld	a, (iy + 42)
	push	hl
	pop	iy
	ld	(iy + 33), a
BB3_11:
	xor	a, c
	xor	a, c
	bit	0, a
	jq	nz, BB3_13
	ld	a, (iy + 14)
	xor	a, c
	bit	0, a
	jq	z, BB3_13
	ld	(iy + 40), 0
	jq	BB3_42
BB3_13:
	push	de
	call	_optix_DefaultKeyIsDown
	pop	hl
	cp	a, 1
	jq	nz, BB3_14
	ld	iy, (ix - 3)
	ld	a, (iy + 42)
	ld	l, 1
	xor	a, l
	xor	a, l
	bit	0, a
	jq	nz, BB3_24
	ld	iy, (ix + 6)
	push	iy
	call	_optix_MoveWidgetToTop
	ld	iy, (ix - 3)
	ld	e, 1
	pop	hl
	ld	(iy + 42), 1
	lea	bc, iy
	ld	(iy + 17), 1
	ld	iy, (ix + 6)
	ld	(iy + 17), 1
	ld	hl, (_current_context)
	ld	hl, (hl)
	ld	a, (hl)
	xor	a, e
	xor	a, e
	bit	0, a
	jq	nz, BB3_40
	push	bc
	pop	iy
	ld	hl, (iy + 27)
	push	hl
	pop	iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB3_40
BB3_21:
	ld	hl, (iy)
	push	hl
	pop	bc
	add	hl, bc
	or	a, a
	sbc	hl, bc
	lea	hl, iy
	ld	iy, (ix + 6)
	jq	z, BB3_40
	push	bc
	pop	iy
	ld	a, (iy + 16)
	xor	a, e
	push	hl
	pop	iy
	lea	iy, iy + 3
	bit	0, a
	jq	nz, BB3_21
	push	bc
	call	_optix_SetCurrentSelection
	pop	hl
	ld	iy, (ix + 6)
	jq	BB3_40
BB3_14:
	cp	a, 4
	ld	iy, (ix + 6)
	ld	l, 1
	jq	nz, BB3_40
	ld	iy, (ix + 6)
	ld	a, (iy + 40)
	xor	a, l
	bit	0, a
	jq	nz, BB3_40
	ld	iy, (_current_context)
	ld	bc, (iy + 9)
	ld	iy, (ix + 6)
	ld	de, (iy + 34)
	push	bc
	pop	iy
	ld	hl, (iy + 1)
	or	a, a
	sbc	hl, de
	ld	(ix - 3), hl
	ld	iy, (ix + 6)
	ld	de, (iy + 37)
	push	bc
	pop	iy
	ld	hl, (iy + 4)
	or	a, a
	sbc	hl, de
	push	hl
	pop	bc
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB3_17
	ld	a, 0
	jq	BB3_26
BB3_24:
	ld	iy, (ix + 6)
	ld	(iy + 40), 1
	lea	de, iy
	ld	iy, (_current_context)
	ld	iy, (iy + 9)
	ld	hl, (iy + 1)
	lea	bc, iy
	push	de
	pop	iy
	ld	(iy + 34), hl
	push	bc
	pop	iy
	ld	hl, (iy + 4)
	push	de
	pop	iy
	ld	(iy + 37), hl
	jq	BB3_40
BB3_17:
	ld	a, 1
BB3_26:
	ld	iy, (ix + 6)
	ld	de, (ix - 3)
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB3_28
	ld	a, 1
BB3_28:
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB3_39
	ld	iy, (iy + 30)
	ld	hl, (iy + 1)
	add	hl, de
	ld	(ix - 9), iy
	ld	iy, (iy + 4)
	add	iy, bc
	ld	de, 0
	push	hl
	pop	bc
	or	a, a
	sbc	hl, de
	call	__setflag
	ld	(ix - 6), iy
	jq	m, BB3_30
	push	bc
	pop	hl
	ld	(ix - 12), hl
	jq	BB3_32
BB3_30:
	ld	hl, 1
	ld	(ix - 12), hl
BB3_32:
	ld	de, 0
	push	de
	pop	bc
	ld	iy, (ix + 6)
	ld	c, (iy + 9)
	ld	iy, (ix - 6)
	lea	hl, iy
	ld	(ix - 3), bc
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	m, BB3_34
	ld	(ix - 3), iy
BB3_34:
	ld	iy, (ix - 9)
	ld	hl, (iy + 7)
	push	de
	pop	bc
	ld	c, l
	ld	b, h
	ld	hl, 319
	or	a, a
	sbc	hl, bc
	ld	(ix - 6), hl
	ld	bc, (ix - 12)
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	m, BB3_36
	ld	(ix - 6), bc
BB3_36:
	ld	e, (iy + 9)
	ld	hl, 239
	or	a, a
	sbc	hl, de
	push	hl
	pop	bc
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	m, BB3_38
	push	de
	pop	bc
BB3_38:
	push	bc
	ld	hl, (ix - 6)
	push	hl
	push	iy
	call	_optix_SetPosition
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + 6)
	push	hl
	call	_optix_RefreshWindowTitleBarTransform
	pop	hl
	ld	iy, (_current_context)
	ld	hl, (iy + 3)
	ld	iy, (ix + 6)
	ld	(hl), 1
BB3_39:
	ld	(iy + 40), 0
BB3_40:
	ld	iy, (ix + 6)
	ld	hl, (iy + 27)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	push	hl
	call	nz, _optix_UpdateStack
	pop	hl
BB3_42:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_RefreshWindowTitleBarTransform
_optix_RefreshWindowTitleBarTransform:
	ld	hl, -6
	call	__frameset
	ld	hl, (ix + 6)
	ld	(ix - 6), hl
	push	hl
	pop	iy
	ld	(ix - 3), iy
	ld	de, (iy + 30)
	push	de
	pop	iy
	ld	bc, (iy + 1)
	ld	iy, (ix - 3)
	ld	(iy + 1), bc
	push	de
	pop	iy
	ld	hl, (iy + 4)
	ld	bc, -14
	add	hl, bc
	ld	iy, (ix - 3)
	ld	(iy + 4), hl
	push	de
	pop	iy
	ld	hl, (iy + 7)
	ld	iy, (ix - 3)
	ld	(iy + 7), l
	ld	(iy + 8), h
	ld	(iy + 9), 14
	ld	hl, (ix - 6)
	ld	(ix + 6), hl
	ld	sp, ix
	pop	ix
	jp	_optix_RecursiveAlign
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_RenderWindowTitleBar_default
_optix_RenderWindowTitleBar_default:
	ld	hl, -3
	call	__frameset
	ld	iy, (ix + 6)
	ld	e, 1
	ld	a, (iy + 15)
	xor	a, e
	bit	0, a
	jq	nz, BB5_11
	ld	iy, (iy + 30)
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB5_3
	ld	hl, 0
	jq	BB5_4
BB5_3:
	ld	hl, (iy + 21)
	push	iy
	call	__indcallhl
	ld	e, 1
	pop	hl
	ld	iy, (ix + 6)
	ld	iy, (iy + 30)
	lea	hl, iy
	ld	(iy + 17), 0
BB5_4:
	ld	iy, (ix + 6)
	ld	a, (iy + 17)
	xor	a, e
	bit	0, a
	jq	nz, BB5_10
	push	hl
	pop	iy
	ld	a, (iy + 42)
	xor	a, e
	ld	iy, (ix + 6)
	ld	bc, (iy + 1)
	dec.sis	bc
	ld	l, (iy + 4)
	ld	(ix - 3), l
	ld	hl, (iy + 7)
	ld.sis	de, 2
	add.sis	hl, de
	ld	e, (iy + 9)
	ld	iyl, e
	ld	de, 8
	bit	0, a
	jq	z, BB5_7
	push	de
	ld	de, 7
	push	de
	ld	de, 4
	push	de
	ld	e, iyl
	push	de
	push	hl
	ld	l, (ix - 3)
	push	hl
	push	bc
	call	_optix_OutlinedRectangle_WithBevel
	ld	hl, 21
	add	hl, sp
	ld	sp, hl
	ld	hl, 11
	jq	BB5_8
BB5_7:
	push	de
	ld	de, 7
	push	de
	ld	de, 5
	push	de
	ld	e, iyl
	push	de
	push	hl
	ld	l, (ix - 3)
	push	hl
	push	bc
	call	_optix_OutlinedRectangle_WithBevel
	ld	hl, 21
	add	hl, sp
	ld	sp, hl
	ld	hl, 13
BB5_8:
	push	hl
	dec	hl
	push	hl
	call	_optix_SetTextColor
	pop	hl
	pop	hl
	ld	iy, (ix + 6)
BB5_10:
	ld	iy, (ix + 6)
	ld	hl, (iy + 27)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	push	hl
	call	nz, _optix_RenderStack
	pop	hl
	ld	hl, 25
	push	hl
	dec	hl
	push	hl
	call	_optix_SetTextColor
	pop	hl
	pop	hl
BB5_11:
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_ResizeWindow
_optix_ResizeWindow:
	ld	hl, -7
	call	__frameset
	ld	iy, (ix + 6)
	ld	c, 1
	ld	a, (iy + 30)
	xor	a, c
	bit	0, a
	jq	nz, BB6_16
	ld	hl, (ix + 9)
	ld	a, (ix + 12)
	ld	iy, (ix + 6)
	ld	de, (iy + 39)
	push	hl
	pop	iy
	ld	(ix - 3), de
	or	a, a
	sbc.sis	hl, de
	jq	c, BB6_3
	ld	e, iyl
	ld	d, iyh
	ld	(ix - 3), de
BB6_3:
	ld	iy, (ix + 6)
	ld	b, (iy + 41)
	cp	a, b
	jq	c, BB6_5
	ld	b, a
BB6_5:
	ld	hl, (ix - 3)
	ld	iy, (ix + 6)
	ld	(iy + 7), l
	ld	(iy + 8), h
	ld	(iy + 9), b
	ld	iy, (iy + 27)
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB6_6
BB6_15:
	ld	hl, (ix + 6)
	push	hl
	call	_optix_RecursiveAlign
	pop	hl
	ld	iy, (ix + 6)
	ld	(iy + 17), 1
BB6_16:
	ld	sp, ix
	pop	ix
	ret
BB6_6:
	ld	hl, (iy)
	push	hl
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB6_15
	ld	(ix - 6), iy
	push	de
	pop	iy
	ld	a, (iy)
	cp	a, 3
	jq	nz, BB6_12
	ld	a, (iy + 31)
	xor	a, c
	xor	a, c
	bit	0, a
	jq	nz, BB6_10
	ld	a, b
	ld	bc, (iy + 39)
	ld	hl, (ix - 3)
	call	__sdivu
	ld	c, l
	ld	b, h
	or	a, a
	sbc	hl, hl
	ld	l, c
	ld	h, b
	push	de
	pop	iy
	ld	bc, 140
	add	iy, bc
	ld	b, a
	ld	(iy), hl
	push	de
	pop	iy
	ld	c, 1
	ld	hl, (ix - 3)
	ld	(iy + 7), l
	ld	(iy + 8), h
BB6_10:
	ld	a, (iy + 32)
	xor	a, c
	xor	a, c
	bit	0, a
	jq	nz, BB6_14
	ld	c, (iy + 41)
	ld	(ix - 7), b
	ld	b, (ix - 7)
	call	__bdivu
	or	a, a
	sbc	hl, hl
	ld	l, a
	push	de
	pop	iy
	ld	bc, 137
	add	iy, bc
	ld	b, (ix - 7)
	ld	(iy), hl
	push	de
	pop	iy
	ld	c, 1
	jq	BB6_13
BB6_12:
	ld	hl, (ix - 3)
	ld	(iy + 7), l
	ld	(iy + 8), h
BB6_13:
	ld	(iy + 9), b
BB6_14:
	ld	iy, (ix - 6)
	lea	iy, iy + 3
	jq	BB6_6
	section	.text,"ax",@progbits

	ident	"clang version 14.0.0 (https://github.com/jacobly0/llvm-project a139def90d26173f771eb1eca797633d1fbb2797)"
	extern	__bdivu
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_optix_GetElementInStackByAddress
	extern	_optix_SetPosition
	extern	__indcallhl
	extern	_optix_SetCurrentSelection
	extern	_optix_UpdateStack
	extern	_optix_OutlinedRectangle_WithBevel
	extern	_optix_RemoveElementInStack
	extern	_optix_RecursiveAlign
	extern	__setflag
	extern	_current_context
	extern	__sdivu
	extern	__Unwind_SjLj_Unregister
	extern	_optix_RenderStack
	extern	_optix_GetNumElementsInStack
	extern	__imulu
	extern	_optix_DefaultKeyIsDown
	extern	_optix_SetTextColor
	extern	__frameset0
