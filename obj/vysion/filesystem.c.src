	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_vysion_DetectAllFiles
_vysion_DetectAllFiles:
	ld	hl, -19
	call	__frameset
	ld	iy, (ix + 6)
	ld	bc, 0
	ld	de, 0
	ld	(ix + -3), bc
	ld	hl, (iy + 3)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	push	bc
	pop	hl
	jq	z, BB0_2
	pea	ix + -3
	ld	hl, (ix + 6)
	push	hl
	call	_vysion_CreateFilesystemHashTable
	ld	bc, 0
	push	hl
	pop	de
	pop	hl
	pop	hl
	ld	hl, (ix + -3)
BB0_2:
	ld	(ix + -13), hl
	ld	(ix + -10), de
	ld	(ix + -6), bc
	ld.sis	hl, 515
	ld	iy, -917456
	ld	(iy), l
	ld	(iy + 1), h
	or	a, a
	sbc	hl, hl
	ld	de, -917504
	push	de
	pop	iy
	ld	(iy), hl
	xor	a, a
	ld	(iy + 3), a
BB0_3:
	pea	ix + -7
	push	bc
	pea	ix + -6
	call	_ti_DetectAny
	push	hl
	pop	iy
	pop	hl
	pop	hl
	pop	hl
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB0_16
	ld	a, (iy)
	cp	a, 33
	ld	bc, 0
	jq	z, BB0_3
	cp	a, 35
	jq	z, BB0_3
	ld	e, (ix + -7)
	ld	a, e
	sub	a, 5
	cp	a, 2
	jq	c, BB0_8
	ld	a, e
	cp	a, 21
	jq	nz, BB0_3
BB0_8:
	ld	hl, (ix + -10)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	(ix + -19), iy
	jq	z, BB0_10
	ld	hl, (ix + -10)
	push	hl
	ld	hl, (ix + -13)
	push	hl
	ld	l, e
	push	hl
	push	iy
	call	_vysion_FilesystemHashSearch
	ld	iy, (ix + -19)
	push	hl
	pop	de
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	push	de
	pop	hl
	ld	bc, -1
	or	a, a
	sbc	hl, bc
	jq	nz, BB0_14
BB0_10:
	ld	hl, (ix + 6)
	push	hl
	call	_vysion_AddFile
	push	hl
	pop	iy
	pop	hl
	ld	a, (ix + -7)
	ld	(iy + 13), a
	ld	(iy), 0
	ld	(ix + -16), iy
	inc	iy
	ld	hl, (ix + -19)
	push	hl
	push	iy
	call	_strcpy
	pop	hl
	pop	hl
	ld	a, (ix + -7)
	cp	a, 21
	jq	nz, BB0_13
	ld	hl, 2
	jq	BB0_12
BB0_13:
	ld	hl, 1
BB0_12:
	ld	iy, (ix + -16)
	ld	(iy + 10), hl
	jq	BB0_15
BB0_14:
	ex	de, hl
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix + -13)
	add	hl, de
	ld	hl, (hl)
	ld	(ix + -16), hl
BB0_15:
	ld.sis	hl, 515
	ld	iy, -917456
	ld	(iy), l
	ld	(iy + 1), h
	or	a, a
	sbc	hl, hl
	ld	de, -917504
	push	de
	pop	iy
	ld	(iy), hl
	xor	a, a
	ld	(iy + 3), a
	ld	iy, (ix + -16)
	ld	(iy + 15), 0
	push	iy
	call	_vysion_GetFileInfo
	pop	hl
	ld	bc, 0
	jq	BB0_3
BB0_16:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vysion_CreateFilesystemHashTable
_vysion_CreateFilesystemHashTable:
	ld	hl, -15
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (iy + 3)
	push	hl
	pop	iy
	add	iy, iy
	ld	(ix + -3), iy
	ld	(ix + -6), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB1_1
BB1_12:
	ld	hl, (ix + -3)
	ld	sp, ix
	pop	ix
	ret
BB1_1:
	ld	bc, 6
	ld	hl, (ix + -6)
	call	__imulu
	push	hl
	call	_malloc
	pop	de
	ld	iy, (ix + 9)
	ld	(iy), hl
	ld	de, 1
	ld	bc, (ix + -3)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB1_3
	ld	bc, 0
BB1_3:
	ld	de, 0
BB1_4:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	iy, (ix + 6)
	jq	z, BB1_5
	ld	iy, (ix + 9)
	ld	iy, (iy)
	push	de
	pop	hl
	add	iy, de
	ld	de, 0
	ld	(iy), de
	dec	bc
	ld	de, 3
	add	hl, de
	ex	de, hl
	jq	BB1_4
BB1_5:
	ld	bc, 0
BB1_7:
	ld	de, (iy + 3)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB1_12
	ld	iy, (iy + 12)
	ld	(ix + -15), bc
	push	bc
	pop	hl
	ld	de, 3
	push	de
	pop	bc
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, (iy)
	inc	hl
	push	hl
	call	_vysion_util_GetStringHash
	push	hl
	pop	de
	pop	hl
	ld	hl, (ix + 9)
	ld	hl, (hl)
	ld	(ix + -9), hl
BB1_9:
	ex	de, hl
	ld	bc, (ix + -3)
	call	__irems
	push	hl
	pop	de
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	ld	iy, (ix + -9)
	add	iy, bc
	ld	hl, (iy)
	ld	(ix + -12), hl
	ld	hl, (ix + -6)
	ld	bc, 0
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	m, BB1_11
	inc	de
	ld	hl, (ix + -12)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB1_9
BB1_11:
	ld	(ix + -9), iy
	ld	iy, (ix + 6)
	ld	iy, (iy + 12)
	ld	de, (ix + -15)
	push	de
	pop	hl
	ld	bc, 3
	call	__imulu
	push	de
	pop	bc
	push	hl
	pop	de
	add	iy, de
	ld	hl, (iy)
	ld	iy, (ix + -9)
	ld	(iy), hl
	ld	iy, (ix + 6)
	inc	bc
	jq	BB1_7
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vysion_FilesystemHashSearch
_vysion_FilesystemHashSearch:
	ld	hl, -9
	call	__frameset
	ld	hl, (ix + 15)
	ld	de, -1
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB2_1
	jq	BB2_8
BB2_1:
	ld	hl, (ix + 6)
	push	hl
	call	_vysion_util_GetStringHash
	ld	bc, (ix + 15)
	push	hl
	pop	iy
	pop	hl
	ld	de, 1
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	__setflag
	push	bc
	pop	de
	jq	p, BB2_3
	ld	de, 0
BB2_3:
BB2_4:
	lea	hl, iy + 0
	call	__irems
	push	hl
	pop	iy
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB2_10
	ld	(ix + -6), de
	lea	hl, iy + 0
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix + 12)
	add	hl, de
	ld	(ix + -9), hl
	ld	hl, (hl)
	inc	hl
	ld	de, (ix + 6)
	push	de
	push	hl
	ld	(ix + -3), iy
	call	_strcmp
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB2_7
	ld	hl, (ix + -9)
	ld	iy, (hl)
	ld	a, (iy + 13)
	ld	l, (ix + 9)
	cp	a, l
	jq	z, BB2_11
BB2_7:
	ld	iy, (ix + -3)
	inc	iy
	ld	de, (ix + -6)
	dec	de
	ld	bc, (ix + 15)
	jq	BB2_4
BB2_10:
	ld	de, -1
	jq	BB2_8
BB2_11:
	ld	de, (ix + -3)
BB2_8:
	ex	de, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vysion_AddFile
_vysion_AddFile:
	ld	hl, -3
	call	__frameset
	ld	iy, (ix + 6)
	ld	bc, 3
	ld	hl, (iy + 3)
	ld	(ix + -3), hl
	inc	hl
	ld	(iy + 3), hl
	ld	de, (iy + 12)
	call	__imulu
	push	hl
	push	de
	call	_realloc
	pop	de
	pop	de
	ld	iy, (ix + 6)
	ld	(iy + 12), hl
	ld	hl, 29
	push	hl
	call	_malloc
	push	hl
	pop	de
	pop	hl
	ld	iy, (ix + 6)
	ld	iy, (iy + 12)
	ld	hl, (ix + -3)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	(iy), de
	ex	de, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vysion_GetFileInfo
_vysion_GetFileInfo:
	ld	hl, -3
	call	__frameset
	call	_ti_CloseAll
	ld	iy, (ix + 6)
	inc	iy
	lea	de, iy + 0
	ld	iy, (ix + 6)
	ld	a, (iy + 13)
	ld	l, a
	push	hl
	ld	hl, L_.str.2
	push	hl
	push	de
	call	_ti_OpenVar
	ld	e, a
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	jq	z, BB4_17
	ld	hl, 0
	ld	bc, (ix + 6)
	push	bc
	pop	iy
	ld	(iy + 16), hl
	push	de
	ld	(ix + -3), de
	call	_ti_GetSize
	pop	de
	ld	iy, (ix + 6)
	ld	(iy + 26), l
	ld	(iy + 27), h
	ld	hl, (ix + -3)
	push	hl
	call	_ti_IsArchived
	pop	de
	ld	iy, (ix + 6)
	ld	a, (iy + 28)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	l, 0
	jq	z, BB4_3
	ld	l, 2
BB4_3:
	and	a, -3
	add	a, l
	ld	(iy + 28), a
	ld	a, (iy + 13)
	cp	a, 5
	jq	nz, BB4_5
	ld	hl, (ix + -3)
	push	hl
	call	_ti_GetDataPtr
	pop	de
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_vysion_GetFileInfo_Basic
	jq	BB4_7
BB4_5:
	cp	a, 6
	jq	nz, BB4_8
	ld	hl, (ix + -3)
	push	hl
	call	_ti_GetDataPtr
	pop	de
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_vysion_GetFileInfo_Asm
BB4_7:
	ld	iy, (ix + 6)
	pop	hl
	pop	hl
BB4_10:
	ld	hl, (iy + 16)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB4_12
	ld	a, (iy + 22)
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, L___const.vysion_GetFileInfo.default_icon
	add	hl, de
	jq	BB4_15
BB4_12:
	ld	iy, (ix + 6)
	ld	iy, (iy + 19)
	ld	(iy + 1), 16
	ld	iy, (ix + 6)
	ld	hl, (iy + 19)
	ld	(hl), 16
	ld	a, (iy + 22)
	cp	a, 2
	jq	c, BB4_14
	ld	hl, (iy + 19)
	push	hl
	call	_vysion_ConvertXlibcToPalette
	ld	iy, (ix + 6)
	pop	hl
BB4_14:
	lea	hl, iy + 19
BB4_15:
	ld	de, (ix + -3)
	ld	hl, (hl)
	ld	iy, (ix + 6)
	ld	(iy + 16), hl
	push	de
	call	_ti_Close
	pop	hl
BB4_17:
	pop	hl
	pop	ix
	ret
BB4_8:
	cp	a, 21
	jq	nz, BB4_10
	ld	(iy + 22), 6
	jq	BB4_10
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vysion_DetectAllFolders
_vysion_DetectAllFolders:
	ld	hl, -21
	call	__frameset
	ld	iy, (ix + 6)
	ld	bc, 3
	ld	de, (iy + 3)
	ld	iy, (iy + 6)
	lea	hl, iy + 0
	add	hl, de
	call	__imulu
	push	hl
	pop	de
	ld	hl, 0
	add	hl, sp
	or	a, a
	sbc	hl, de
	ld	(ix + -15), hl
	ld	sp, hl
	lea	bc, iy + 0
	ld	de, 0
BB5_1:
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB5_22
	ld	(ix + -6), bc
	ld	(ix + -3), de
	ld	iy, (ix + 6)
	ld	de, (iy + 3)
	push	de
	pop	hl
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB5_4
	ld	de, 0
BB5_4:
	or	a, a
	sbc	hl, hl
	ld	(ix + -12), hl
	ld	(ix + -9), hl
	ld	bc, (ix + -6)
BB5_5:
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB5_12
	ld	iy, (ix + 6)
	ld	hl, (iy + 12)
	ld	bc, (ix + -12)
	add	hl, bc
	ld	iy, (hl)
	ld	(ix + -21), iy
	ld	hl, (iy + 10)
	ld	(ix + -18), hl
	ld	iy, (ix + 6)
	ld	iy, (iy + 15)
	ld	hl, (ix + -3)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	iy, (iy)
	ld	bc, (iy + 13)
	ld	hl, (ix + -18)
	or	a, a
	sbc	hl, bc
	jq	nz, BB5_11
	ld	iy, (ix + -21)
	ld	a, (iy + 15)
	ld	l, 1
	xor	a, l
	xor	a, l
	bit	0, a
	jq	nz, BB5_11
	ld	iy, (ix + -9)
	lea	hl, iy + 0
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix + -15)
	add	hl, bc
	ld	bc, (ix + -21)
	ld	(hl), bc
	inc	iy
	ld	(ix + -9), iy
BB5_11:
	dec	de
	ld	bc, 3
	ld	hl, (ix + -12)
	add	hl, bc
	ld	(ix + -12), hl
	ld	bc, (ix + -6)
	jq	BB5_5
BB5_12:
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
BB5_13:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB5_21
	ld	(ix + -6), bc
	lea	de, iy + 0
	ld	iy, (ix + 6)
	ld	hl, (iy + 15)
	ld	(ix + -12), hl
	ld	(ix + -18), de
	add	hl, de
	ld	iy, (hl)
	ld	(ix + -21), iy
	ld	de, (iy + 10)
	ld	hl, (ix + -3)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix + -12)
	add	hl, bc
	ld	iy, (hl)
	ld	bc, (iy + 13)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	nz, BB5_17
	ld	iy, (ix + -21)
	ld	bc, (iy + 13)
	ex	de, hl
	or	a, a
	sbc	hl, bc
	ld	iy, (ix + -18)
	jq	z, BB5_19
	ld	de, (ix + -9)
	push	de
	pop	hl
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix + -15)
	add	hl, bc
	ld	bc, (ix + -21)
	ld	(hl), bc
	inc	de
	ld	(ix + -9), de
BB5_19:
	ld	bc, (ix + -6)
	jq	BB5_20
BB5_17:
	ld	bc, (ix + -6)
	ld	iy, (ix + -18)
BB5_20:
	dec	bc
	ld	de, 3
	add	iy, de
	jq	BB5_13
BB5_21:
	ld	hl, (ix + -9)
	ld	de, 3
	push	de
	pop	bc
	call	__imulu
	ld	(ix + -12), hl
	push	hl
	pop	iy
	add	iy, de
	push	iy
	call	_malloc
	push	hl
	pop	de
	pop	hl
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	iy, (iy + 15)
	ld	hl, (ix + -3)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	ld	(ix + -6), bc
	lea	hl, iy + 0
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 21), de
	ld	iy, (hl)
	ld	iy, (iy + 21)
	ld	hl, (ix + -9)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, 0
	ld	(iy), hl
	ld	iy, (ix + 6)
	ld	hl, (iy + 15)
	ld	de, (ix + -6)
	add	hl, de
	ld	iy, (hl)
	ld	hl, (iy + 21)
	ld	de, (ix + -12)
	push	de
	ld	de, (ix + -15)
	push	de
	push	hl
	call	_memcpy
	ld	de, (ix + -3)
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix + 6)
	ld	hl, (iy + 15)
	ld	bc, (ix + -6)
	add	hl, bc
	ld	iy, (hl)
	ld	hl, _icon_folder_data
	ld	(iy + 18), hl
	inc	de
	ld	iy, (ix + 6)
	ld	bc, (iy + 6)
	jq	BB5_1
BB5_22:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vysion_SaveFilesystem
_vysion_SaveFilesystem:
	ld	hl, -12
	call	__frameset
	ld	hl, 2
	ld	de, L_.str
	ld	bc, L_.str.1
	ld	(ix + -3), hl
	push	bc
	push	de
	call	_ti_Open
	ld	e, a
	pop	hl
	pop	hl
	or	a, a
	jq	z, BB6_10
	ld	hl, 3
	ld	bc, 1
	push	de
	push	bc
	push	hl
	pea	ix + -3
	ld	(ix + -6), de
	call	_ti_Write
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + -6)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 12
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_ti_Write
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, 0
	ld	(ix + -9), bc
	push	bc
	pop	hl
BB6_2:
	ld	iy, (ix + 6)
	ld	de, (iy + 3)
	ld	(ix + -12), hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB6_3
	ld	iy, (ix + 6)
	ld	hl, (iy + 12)
	ld	de, (ix + -9)
	add	hl, de
	ld	iy, (hl)
	ld	a, (iy + 15)
	ld	l, 1
	xor	a, l
	xor	a, l
	bit	0, a
	ld	hl, (ix + -6)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 15
	push	hl
	push	iy
	call	z, _ti_Write
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, (ix + -12)
	inc	bc
	ld	de, 3
	ld	hl, (ix + -9)
	add	hl, de
	ld	(ix + -9), hl
	push	bc
	pop	hl
	ld	iy, 0
	lea	bc, iy + 0
	jq	BB6_2
BB6_3:
	push	bc
	pop	hl
BB6_7:
	ld	iy, (ix + 6)
	ld	de, (iy + 6)
	ld	(ix + -9), hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB6_8
	ld	iy, (ix + 6)
	ld	hl, (iy + 15)
	push	bc
	pop	de
	add	hl, de
	ld	hl, (hl)
	ld	de, (ix + -6)
	push	de
	ld	de, 1
	push	de
	ld	de, 17
	push	de
	push	hl
	ld	(ix + -12), bc
	call	_ti_Write
	ld	iy, (ix + -12)
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + -9)
	inc	hl
	ld	de, 3
	add	iy, de
	lea	bc, iy + 0
	jq	BB6_7
BB6_8:
	ld	hl, (ix + -6)
	push	hl
	call	_ti_Close
	pop	hl
BB6_10:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vysion_LoadFilesystem
_vysion_LoadFilesystem:
	ld	hl, -18
	call	__frameset
	call	_vysion_asm_SortVAT
	ld	hl, L_.str.2
	push	hl
	ld	hl, L_.str
	push	hl
	call	_ti_Open
	ld	e, a
	pop	hl
	pop	hl
	or	a, a
	jq	nz, BB7_2
	ld	hl, (ix + 6)
	push	hl
	call	_vysion_InitializeFilesystem
	jq	BB7_13
BB7_2:
	ld	hl, 3
	ld	bc, 1
	push	de
	push	bc
	push	hl
	pea	ix + -3
	ld	(ix + -9), de
	call	_ti_Read
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + -9)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 12
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_ti_Read
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix + 6)
	ld	hl, (iy + 3)
	ld	(ix + -12), hl
	ld	hl, (iy + 6)
	ld	(ix + -6), hl
	ld	hl, (iy + 9)
	ld	(ix + -15), hl
	ld	de, 0
	ld	(iy + 6), de
	ld	(iy + 3), de
	ld	bc, 1
	ld	de, (ix + -12)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	ex	de, hl
	call	__setflag
	ld	de, 0
	jq	p, BB7_5
	ex	de, hl
	jq	BB7_5
BB7_6:
	ld	de, (ix + 6)
	push	de
	ld	(ix + -12), hl
	call	_vysion_AddFile
	push	hl
	pop	de
	ld	(ix + -18), de
	pop	hl
	ld	hl, (ix + -9)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 15
	push	hl
	push	de
	call	_ti_Read
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix + -18)
	ld	(iy + 15), 1
	ld	hl, (ix + -12)
	dec	hl
BB7_5:
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB7_6
	ld	hl, (ix + -6)
	ld	de, 1
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB7_10
	ld	bc, 0
	ld	(ix + -6), bc
	jq	BB7_10
BB7_11:
	ld	hl, (ix + 6)
	push	hl
	call	_vysion_AddFolder
	push	hl
	pop	de
	ld	(ix + -12), de
	pop	hl
	ld	hl, (ix + -9)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 17
	push	hl
	push	de
	call	_ti_Read
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix + -12)
	ld	(iy + 17), 1
	ld	hl, (ix + -6)
	dec	hl
	ld	(ix + -6), hl
BB7_10:
	ld	hl, (ix + -6)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB7_11
	ld	hl, (ix + -15)
	ld	iy, (ix + 6)
	ld	(iy + 9), hl
	ld	hl, (ix + -9)
	push	hl
	call	_ti_Close
BB7_13:
	pop	hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vysion_AddFolder
_vysion_AddFolder:
	ld	hl, -3
	call	__frameset
	ld	iy, (ix + 6)
	ld	bc, 3
	ld	hl, (iy + 6)
	ld	(ix + -3), hl
	inc	hl
	ld	(iy + 6), hl
	ld	de, (iy + 15)
	call	__imulu
	push	hl
	push	de
	call	_realloc
	pop	de
	pop	de
	ld	iy, (ix + 6)
	ld	(iy + 15), hl
	ld	hl, 24
	push	hl
	call	_malloc
	push	hl
	pop	de
	pop	hl
	ld	iy, (ix + 6)
	ld	iy, (iy + 15)
	ld	hl, (ix + -3)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	ld	(ix + -3), bc
	add	iy, bc
	ld	(iy), de
	ld	iy, (ix + 6)
	ld	bc, (iy + 9)
	push	bc
	pop	de
	inc	de
	ld	(iy + 9), de
	ld	hl, (iy + 15)
	ld	de, (ix + -3)
	add	hl, de
	ld	iy, (hl)
	ld	(iy + 13), bc
	lea	hl, iy + 0
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vysion_InitializeFilesystem
_vysion_InitializeFilesystem:
	ld	hl, -9
	call	__frameset
	ld	bc, 0
	ld	de, L___const.vysion_InitializeFilesystem.name
	ld	(ix + -3), de
	ld	de, 5
BB9_1:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jq	z, BB9_2
	ld	hl, (ix + 6)
	push	hl
	ld	(ix + -6), bc
	call	_vysion_AddFolder
	ld	(ix + -9), hl
	pop	de
	push	hl
	pop	iy
	inc	iy
	ld	hl, (ix + -3)
	ld	hl, (hl)
	push	hl
	push	iy
	call	_strcpy
	ld	iy, (ix + -9)
	ld	bc, (ix + -6)
	pop	hl
	pop	hl
	ld	(iy + 13), bc
	push	bc
	pop	hl
	ld	de, 4
	or	a, a
	sbc	hl, de
	ld	hl, 3
	jq	z, BB9_5
	or	a, a
	sbc	hl, hl
BB9_5:
	ld	(iy + 10), hl
	ld	(iy), 1
	ld	hl, _icon_folder_data
	ld	(iy + 18), hl
	inc	bc
	ld	iy, (ix + -3)
	lea	iy, iy + 3
	ld	(ix + -3), iy
	ld	de, 5
	jq	BB9_1
BB9_2:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vysion_GetFileInfo_Asm
_vysion_GetFileInfo_Asm:
	call	__frameset0
	ld	bc, (ix + 6)
	ld	iy, (ix + 9)
	ld	l, (iy)
	ld	h, (iy + 1)
	ld.sis	de, 31727
	or	a, a
	sbc.sis	hl, de
	jq	nz, BB10_3
	ld	a, (iy + 2)
	cp	a, 127
	jq	z, BB10_4
	ld	l, 3
	jq	BB10_5
BB10_3:
	push	iy
	push	bc
	call	_vysion_GetFileInfo_Basic
	jq	BB10_9
BB10_4:
	ld	l, 5
BB10_5:
	or	a, a
	jq	nz, BB10_8
	ld	l, 4
BB10_8:
	ld	de, (ix + 6)
	lea	bc, iy + 0
	push	de
	pop	iy
	ld	(iy + 22), l
	ld	hl, 20
	push	hl
	ld	hl, 16
	push	hl
	push	bc
	call	_memchr
	pop	de
	pop	de
	pop	de
	ld	iy, (ix + 6)
	ld	(iy + 16), hl
	ld	de, (iy + 19)
	ld	bc, 258
	push	bc
	push	hl
	push	de
	call	_memcpy
	pop	hl
BB10_9:
	pop	hl
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vysion_GetFileInfo_Basic
_vysion_GetFileInfo_Basic:
	ld	hl, -33
	call	__frameset
	ld	iy, L___const.vysion_GetFileInfo_Basic.palette
	ld	de, 16
	lea	bc, ix + -16
	lea	hl, ix + -22
	ld	(ix + -27), hl
	push	de
	push	iy
	ld	(ix + -30), bc
	push	bc
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 6
	push	hl
	ld	hl, L___const.vysion_GetFileInfo_Basic.ti_basic_sequence
	push	hl
	ld	hl, (ix + -27)
	push	hl
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld.sis	hl, 32
	ld	(ix + -24), l
	ld	(ix + -23), h
	ld	de, 16
	ld	bc, 0
BB11_1:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jq	z, BB11_2
	ld	iy, (ix + -30)
	add	iy, bc
	ld	a, (iy)
	ld	de, 0
	ld	e, a
	ld	hl, _xlibc_condensed_data+2
	add	hl, de
	ld	de, 16
	ld	a, (hl)
	ld	(iy), a
	inc	bc
	jq	BB11_1
BB11_2:
	ld	iy, (ix + 6)
	ld	a, (iy + 13)
	cp	a, 5
	jq	nz, BB11_3
	ld	a, 0
	jq	BB11_5
BB11_3:
	ld	a, 1
BB11_5:
	and	a, 1
	ld	iy, (ix + 6)
	ld	(iy + 22), a
	ld	hl, 6
	push	hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix + -27)
	push	hl
	call	_memcmp
	pop	de
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB11_11
	ld	iy, (ix + 9)
	lea	hl, iy + 6
	ld	(ix + -33), hl
	ld	de, 256
	ld	bc, 0
BB11_8:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jq	z, BB11_9
	ld	hl, (ix + -33)
	add	hl, bc
	ld	a, (hl)
	ld	(ix + -24), a
	ld	hl, 16
	push	hl
	ld	hl, 0
	push	hl
	pea	ix + -24
	ld	(ix + -27), bc
	call	_strtol
	ld	bc, (ix + -27)
	push	hl
	pop	de
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + -30)
	add	hl, de
	ld	de, 256
	ld	a, (hl)
	ld	iy, (ix + 6)
	ld	iy, (iy + 19)
	add	iy, bc
	ld	(iy + 2), a
	inc	bc
	jq	BB11_8
BB11_9:
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	hl, (iy + 19)
	ld	(iy + 16), hl
BB11_11:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vysion_GetFolderByIndex
_vysion_GetFolderByIndex:
	ld	hl, -9
	call	__frameset
	ld	iy, (ix + 6)
	ld	de, 0
	ld	(ix + -3), de
	ld	de, (iy + 6)
	ld	bc, 1
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB12_2
	ld	de, 0
BB12_2:
	inc	de
BB12_3:
	dec	de
	ld	hl, (ix + -3)
	ld	bc, 3
	add	hl, bc
	ld	(ix + -9), hl
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB12_6
	ld	iy, (ix + 6)
	ld	hl, (iy + 15)
	ld	bc, (ix + -3)
	add	hl, bc
	ld	iy, (hl)
	ld	(ix + -6), iy
	ld	hl, (iy + 13)
	ld	bc, (ix + 9)
	or	a, a
	sbc	hl, bc
	ld	hl, (ix + -9)
	ld	(ix + -3), hl
	jq	nz, BB12_3
	jq	BB12_5
BB12_6:
	ld	iy, 0
	ld	(ix + -6), iy
BB12_5:
	ld	hl, (ix + -6)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	L_.str
L_.str:
	db	"VYSFILES",000o

	section	.rodata,"a",@progbits
	private	L_.str.1
L_.str.1:
	db	"w+",000o

	section	.rodata,"a",@progbits
	private	L_.str.2
L_.str.2:
	db	"r",000o

	section	.rodata,"a",@progbits
	private	L_.str.3
L_.str.3:
	db	"Root",000o

	section	.rodata,"a",@progbits
	private	L_.str.4
L_.str.4:
	db	"Programs",000o

	section	.rodata,"a",@progbits
	private	L_.str.5
L_.str.5:
	db	"Appvars",000o

	section	.rodata,"a",@progbits
	private	L_.str.6
L_.str.6:
	db	"Desktop",000o

	section	.rodata,"a",@progbits
	private	L_.str.7
L_.str.7:
	db	"Test",000o

	section	.rodata,"a",@progbits
	private	L___const.vysion_InitializeFilesystem.name
L___const.vysion_InitializeFilesystem.name:
	dl	L_.str.3
	dl	L_.str.4
	dl	L_.str.5
	dl	L_.str.6
	dl	L_.str.7

	section	.rodata,"a",@progbits
	private	L___const.vysion_GetFileInfo.default_icon
L___const.vysion_GetFileInfo.default_icon:
	dl	_icon_basic_data
	dl	_icon_basic_data
	dl	_icon_ices_data
	dl	_icon_ez80_data
	dl	_icon_c_data
	dl	_icon_ice_data
	dl	_icon_appvar_data

	section	.rodata,"a",@progbits
	private	L___const.vysion_GetFileInfo_Basic.palette
L___const.vysion_GetFileInfo_Basic.palette:
	db	"",337o,030o,340o,000o,370o,006o,344o,"`",020o,035o,347o,377o,336o,275o,224o,"J"

	section	.rodata,"a",@progbits
	private	L___const.vysion_GetFileInfo_Basic.ti_basic_sequence
L___const.vysion_GetFileInfo_Basic.ti_basic_sequence:
	db	">DCS?*"

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	__Unwind_SjLj_Register
	extern	_icon_ice_data
	extern	_malloc
	extern	_icon_c_data
	extern	_ti_Close
	extern	_ti_OpenVar
	extern	_memcpy
	extern	_ti_Read
	extern	__setflag
	extern	_ti_Open
	extern	_ti_GetSize
	extern	_ti_DetectAny
	extern	_vysion_util_GetStringHash
	extern	_xlibc_condensed_data
	extern	_realloc
	extern	__frameset
	extern	_strcmp
	extern	_ti_Write
	extern	_icon_appvar_data
	extern	_memchr
	extern	_icon_ices_data
	extern	_icon_ez80_data
	extern	_ti_CloseAll
	extern	__Unwind_SjLj_Unregister
	extern	__irems
	extern	_icon_folder_data
	extern	_strcpy
	extern	__imulu
	extern	_vysion_ConvertXlibcToPalette
	extern	_strtol
	extern	_ti_GetDataPtr
	extern	_ti_IsArchived
	extern	_icon_basic_data
	extern	__frameset0
	extern	_vysion_asm_SortVAT
	extern	_memcmp
