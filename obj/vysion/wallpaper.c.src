	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_vysion_TestWallpaper
_vysion_TestWallpaper:
	ld	hl, -9
	call	__frameset
	call	_ti_CloseAll
	ld	hl, L_.str
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_ti_Open
	ld	e, a
	pop	hl
	pop	hl
	or	a, a
	jq	z, BB0_2
	push	de
	ld	(ix + -3), de
	call	_ti_GetDataPtr
	push	hl
	pop	iy
	pop	hl
	lea	hl, iy + 9
	ld	(ix + -6), hl
	ld	l, (iy + 9)
	ld	h, (iy + 10)
	ld	de, 0
	ld	e, l
	ld	d, h
	ld	(ix + -9), de
	ld	hl, 32
	push	hl
	push	de
	pea	iy + 11
	call	_gfx_SetPalette
	pop	hl
	pop	hl
	pop	hl
	ld	de, 2
	ld	hl, (ix + -9)
	add	hl, de
	ex	de, hl
	ld	iy, (ix + -6)
	add	iy, de
	ld	hl, -1900524
	ld	hl, (hl)
	push	iy
	push	hl
	call	_zx7_Decompress
	pop	hl
	pop	hl
	ld	hl, (ix + -3)
	push	hl
	call	_ti_Close
	pop	hl
BB0_2:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vysion_SetWallpaper
_vysion_SetWallpaper:
	ld	hl, -15
	call	__frameset
	call	_ti_CloseAll
	ld	hl, L_.str
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_ti_Open
	ld	e, a
	pop	hl
	pop	hl
	or	a, a
	jq	z, BB1_5
	ld	hl, (ix + 9)
	ld	(ix + -6), hl
	ld	(ix + -9), de
	push	de
	call	_ti_GetDataPtr
	push	hl
	pop	iy
	pop	hl
	lea	hl, iy + 9
	ld	(ix + -3), hl
	lea	hl, iy + 15
	ld	(ix + -12), hl
	ld	l, (iy + 13)
	ld	h, (iy + 14)
	ld	bc, 0
	push	bc
	pop	de
	ld	e, l
	ld	d, h
	ld	hl, (ix + -3)
	add	hl, de
	ld	(ix + -3), hl
	ld	l, (iy + 27)
	ld	h, (iy + 28)
	push	bc
	pop	de
	ld	e, l
	ld	d, h
	ld	hl, 32
	push	hl
	push	de
	pea	iy + 29
	call	_gfx_SetPalette
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix + -3)
	lea	hl, iy + 2
	ld	(ix + -3), hl
	ld	bc, 12
	ld	iy, 0
BB1_2:
	lea	hl, iy + 0
	or	a, a
	sbc	hl, bc
	jq	z, BB1_3
	lea	bc, iy + 0
	ld	hl, (ix + -12)
	add	hl, bc
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	bc, 0
	ld	c, l
	ld	b, h
	ld	hl, (ix + -3)
	add	hl, bc
	push	hl
	pop	bc
	ld	(ix + -15), iy
	ld	de, (ix + -6)
	push	de
	pop	hl
	ld	iy, (hl)
	ld	(iy + 30), bc
	ld	hl, (ix + -15)
	ld	bc, 2
	add	hl, bc
	ld	bc, 12
	push	de
	pop	iy
	lea	iy, iy + 3
	ld	(ix + -6), iy
	push	hl
	pop	iy
	jq	BB1_2
BB1_3:
	ld	hl, (ix + -9)
	push	hl
	call	_ti_Close
	pop	hl
BB1_5:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vysion_InitializeWallpaper
_vysion_InitializeWallpaper:
	ld	hl, -46
	call	__frameset
	ld	hl, (ix + 6)
	ld	(ix + -40), hl
	ld	bc, 0
	lea	hl, ix + -37
	ld	(ix + -43), hl
	ld	de, 240
BB2_1:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jq	z, BB2_2
	ld	hl, 37
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, (ix + -43)
	push	hl
	ld	(ix + -46), bc
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + -46)
	ld	(ix + -33), hl
	ld.sis	hl, 320
	ld	(ix + -30), l
	ld	(ix + -29), h
	ld	(ix + -28), 40
	ld	(ix + -4), 1
	ld	(ix + -3), 1
	ld	hl, 1
	push	hl
	ld	hl, (ix + -43)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	hl, _vysion_RenderWallpaper
	ld	(ix + -16), hl
	ld	hl, (ix + -40)
	ld	bc, (hl)
	ld	de, 37
	push	de
	ld	de, (ix + -43)
	push	de
	push	bc
	call	_memcpy
	ld	iy, (ix + -46)
	pop	hl
	pop	hl
	pop	hl
	ld	de, 40
	add	iy, de
	lea	bc, iy + 0
	ld	de, 240
	ld	iy, (ix + -40)
	lea	iy, iy + 3
	ld	(ix + -40), iy
	jq	BB2_1
BB2_2:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vysion_RenderWallpaper
_vysion_RenderWallpaper:
	ld	hl, -3
	call	__frameset
	ld	iy, (ix + 6)
	ld	a, (iy + 15)
	ld	c, 1
	xor	a, c
	bit	0, a
	jq	nz, BB3_4
	ld	de, (iy + 30)
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB3_4
	ld	a, (iy + 17)
	xor	a, c
	bit	0, a
	jq	nz, BB3_4
	ld	hl, -1900524
	ld	hl, (hl)
	ld	(ix + -3), hl
	ld	hl, (iy + 4)
	ld	bc, 320
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix + -3)
	add	hl, bc
	push	de
	push	hl
	call	_zx7_Decompress
	pop	hl
	pop	hl
BB3_4:
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	L_.str
L_.str:
	db	"r",000o

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	_ti_CloseAll
	extern	_memset
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	__Unwind_SjLj_Unregister
	extern	_optix_InitializeWidget
	extern	_ti_Open
	extern	_gfx_SetPalette
	extern	_zx7_Decompress
	extern	_ti_GetDataPtr
	extern	_ti_Close
	extern	__imulu
	extern	_memcpy
