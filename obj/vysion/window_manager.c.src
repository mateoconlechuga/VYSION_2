	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_vysion_AddWindow
_vysion_AddWindow:
	ld	hl, -6
	call	__frameset
	ld	de, 7
	ld	iy, (_current_context)
	ld	iy, (iy + 12)
	lea	bc, iy + -3
BB0_1:
	push	bc
	pop	iy
	lea	bc, iy + 3
	ld	hl, (iy + 3)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB0_1
	ld	(ix + -6), bc
	ld	(ix + -3), iy
	ld	hl, 0
	ld	(iy + 6), hl
	ld	iy, (ix + 6)
	ld	a, (iy + 3)
	or	a, a
	jq	z, BB0_4
	ld	de, 0
BB0_4:
	push	de
	call	_malloc
	pop	de
	ld	iy, (ix + -3)
	ld	(iy + 3), hl
	ld	hl, (ix + 6)
	ld	hl, (hl)
	push	hl
	call	_vysion_FormatWindowTitleBar
	pop	hl
	ld	hl, (ix + 6)
	ld	hl, (hl)
	push	hl
	call	_optix_RecursiveAlign
	pop	hl
	ld	hl, (ix + 6)
	ld	hl, (hl)
	push	hl
	ld	hl, (ix + -6)
	push	hl
	call	_optix_CopyElement
	pop	hl
	pop	hl
	ld	hl, (_current_context)
	ld	hl, (hl)
	ld	a, (hl)
	ld	l, 1
	xor	a, l
	xor	a, l
	bit	0, a
	jq	nz, BB0_6
	ld	iy, (ix + -3)
	ld	hl, (iy + 3)
	push	hl
	call	_optix_SetCurrentSelection
	pop	hl
	ld	iy, (ix + -3)
	ld	iy, (iy + 3)
	ld	(iy + 14), 1
	ld	iy, (_current_context)
	ld	iy, (iy + 9)
	ld	hl, 5
	ld	(iy + 51), hl
BB0_6:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vysion_GetWindowSize
_vysion_GetWindowSize:
	call	__frameset0
	ld	a, (ix + 6)
	or	a, a
	sbc	hl, hl
	or	a, a
	jq	z, BB1_1
	jq	BB1_3
BB1_1:
	ld	hl, 7
BB1_3:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vysion_FormatWindowTitleBar
_vysion_FormatWindowTitleBar:
	ld	hl, -174
	call	__frameset
	ld	de, -156
	lea	iy, ix + 0
	add	iy, de
	ld	de, -168
	lea	hl, ix + 0
	add	hl, de
	ld	(hl), iy
	ld	bc, 0
	lea	de, ix + -52
	ld	(ix + -3), bc
	push	ix
	ld	bc, -165
	add	ix, bc
	ld	(ix + 0), de
	pop	ix
	lea	hl, iy + 18
	push	ix
	ld	bc, -162
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 6
	push	ix
	ld	bc, -174
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 0
	ld	bc, -171
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), hl
	ld	hl, 46
	push	hl
	ld	bc, (ix + -3)
	push	bc
	push	de
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	(ix + -22), 1
	ld	hl, L_.str
	ld	(ix + -20), hl
	ld	(ix + -8), 1
	ld	bc, -165
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeTextTransform
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -165
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	(ix + -7), 0
	ld	(ix + -42), 0
	ld	(ix + -40), 4
	ld	(ix + -41), 1
	ld	hl, 86
	push	hl
	or	a, a
	sbc	hl, hl
	push	ix
	ld	bc, -159
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	push	hl
	ld	bc, -162
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld.sis	hl, 36
	push	ix
	ld	bc, -131
	add	ix, bc
	ld	(ix + 0), l
	ld	(ix + 1), h
	pop	ix
	ld	bc, -129
	lea	hl, ix + 0
	add	hl, bc
	ld	(hl), 12
	ld	(ix + -96), 1
	ld	(ix + -95), 1
	push	ix
	ld	bc, -168
	add	ix, bc
	ld	iy, (ix + 0)
	pop	ix
	ld	hl, L_.str.1
	ld	(iy + 6), hl
	ld	hl, L_.str.2
	ld	(iy + 9), hl
	ld	hl, L_.str.3
	ld	(iy + 12), hl
	ld	hl, 0
	ld	(iy + 15), hl
	ld	bc, -174
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(ix + -88), hl
	ld	hl, 1
	ld	(ix + -73), hl
	ld	hl, 3
	ld	(ix + -70), hl
	push	hl
	ld	bc, -162
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	pop	hl
	pop	hl
	ld	(ix + -128), 2
	ld	(ix + -127), 1
	ld	bc, -165
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -168
	lea	iy, ix + 0
	add	iy, bc
	ld	iy, (iy + 0)
	ld	(iy + 0), hl
	ld	bc, -162
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy + 3), hl
	ld	hl, 9
	push	hl
	call	_malloc
	ld	iy, (ix + 6)
	pop	de
	ld	(iy + 27), hl
	ld	de, 6
BB2_1:
	ld	iy, (iy + 27)
	ld	bc, -159
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	or	a, a
	sbc	hl, de
	jq	z, BB2_2
	ld	bc, -159
	lea	hl, ix + 0
	add	hl, bc
	ld	de, (hl)
	add	iy, de
	push	ix
	ld	bc, -171
	add	ix, bc
	ld	hl, (ix + 0)
	pop	ix
	add	hl, de
	ld	hl, (hl)
	push	hl
	push	iy
	call	_optix_CopyElement
	pop	hl
	pop	hl
	ld	de, 3
	ld	bc, -159
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	add	hl, de
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), hl
	ld	de, 6
	ld	iy, (ix + 6)
	jq	BB2_1
BB2_2:
	ld	hl, 0
	ld	(iy + 6), hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vysion_CloseAllWindows
_vysion_CloseAllWindows:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 6)
	ld	de, 30
	ld	(ix + -3), de
BB3_1:
	push	hl
	pop	iy
	ld	iy, (iy + 12)
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB3_4
	ld	de, (ix + -3)
	add	iy, de
	ld	hl, (iy)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB3_4
	push	iy
	call	_optix_FreeElement
	ld	hl, 3
	ex	de, hl
	pop	hl
	ld	hl, (ix + -3)
	add	hl, de
	ld	(ix + -3), hl
	ld	hl, (ix + 6)
	jq	BB3_1
BB3_4:
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	L_.str
L_.str:
	db	"Files",000o

	section	.rodata,"a",@progbits
	private	L_.str.1
L_.str.1:
	db	"-",000o

	section	.rodata,"a",@progbits
	private	L_.str.2
L_.str.2:
	db	"^",000o

	section	.rodata,"a",@progbits
	private	L_.str.3
L_.str.3:
	db	"X",000o

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	_current_context
	extern	_memset
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_malloc
	extern	_optix_CopyElement
	extern	__Unwind_SjLj_Unregister
	extern	_optix_FreeElement
	extern	_optix_InitializeWidget
	extern	_optix_InitializeTextTransform
	extern	_optix_SetCurrentSelection
	extern	__frameset0
	extern	_optix_RecursiveAlign
