	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_optix_InitializeCursor
_optix_InitializeCursor:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	de, 1572864
	ld	a, 67
	ld	c, 66
	ld	hl, 0
	ld	(iy + 40), de
	ld	(iy + 43), a
	ld	de, -2097152
	ld	(iy + 44), de
	ld	(iy + 47), c
	ld	(iy + 27), hl
	ld	de, 160
	ld	(iy + 1), de
	ld	de, 120
	ld	(iy + 4), de
	ld.sis	de, 1
	ld	(iy + 7), e
	ld	(iy + 8), d
	ld	(iy + 9), 1
	ld	de, _optix_UpdateCursor_default
	ld	(iy + 24), de
	ld	de, _optix_RenderCursor_default
	ld	(iy + 21), de
	ld	(iy + 15), 1
	ld	(iy + 54), hl
	ld	hl, 4
	ld	(iy + 51), hl
	ld	hl, _malloc
	push	hl
	ld	hl, 16
	push	hl
	push	hl
	call	_gfx_AllocSprite
	pop	de
	pop	de
	pop	de
	ld	iy, (ix + 6)
	ld	(iy + 57), hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_UpdateCursor_default
_optix_UpdateCursor_default:
	ld	hl, -12
	call	__frameset
	ld	iy, (ix + 6)
	ld	de, 4
	ld	hl, (iy + 1)
	ld	(iy + 30), hl
	ld	hl, (iy + 4)
	ld	(iy + 33), hl
	ld	hl, (_current_context)
	push	hl
	pop	bc
	ld	hl, (hl)
	ld	a, (hl)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	z, BB1_11
	ld	hl, (iy + 51)
	ld	bc, 5
	or	a, a
	sbc	hl, bc
	jq	z, BB1_3
	ld	(iy + 51), de
BB1_3:
	ld	hl, 1
	push	hl
	call	_optix_DefaultKeyIsDown
	pop	hl
	and	a, 1
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB1_5
	ld	iy, (ix + 6)
	or	a, a
	sbc	hl, hl
	ld	(iy + 51), hl
BB1_5:
	ld	hl, 2
	push	hl
	call	_optix_DefaultKeyIsDown
	pop	hl
	and	a, 1
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB1_7
	ld	iy, (ix + 6)
	ld	hl, 1
	ld	(iy + 51), hl
BB1_7:
	ld	hl, 3
	push	hl
	call	_optix_DefaultKeyIsDown
	pop	hl
	and	a, 1
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB1_9
	ld	iy, (ix + 6)
	ld	hl, 2
	ld	(iy + 51), hl
BB1_9:
	ld	hl, 4
	push	hl
	call	_optix_DefaultKeyIsDown
	pop	hl
	and	a, 1
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	z, BB1_15
	ld	iy, (ix + 6)
	ld	hl, (iy + 51)
	ld	de, 4
	or	a, a
	sbc	hl, de
	jq	nz, BB1_16
	jq	BB1_44
BB1_11:
	or	a, a
	sbc	hl, hl
	ld	e, 56
	push	bc
	pop	iy
	ld	(ix + -3), iy
	ld	iy, (iy + 3)
	ld	bc, (iy + 4)
	ld	a, (iy + 7)
	call	__ltof
	call	__fmul
	ld	(ix + -9), bc
	ld	(ix + -10), a
	ld	iy, (ix + -3)
	ld	iy, (iy + 9)
	ld	(iy + 48), hl
	inc	hl
	push	hl
	call	_optix_DefaultKeyIsDown
	ld	iy, (ix + 6)
	ld	d, a
	pop	hl
	or	a, a
	lea	hl, iy + 44
	ld	(ix + -6), hl
	jq	z, BB1_13
	ld	hl, (iy + 36)
	ld	e, (iy + 39)
	ld	bc, (iy + 44)
	ld	iy, (ix + -6)
	lea	iy, iy + 3
	ld	a, (iy)
	ld	iy, (ix + 6)
	call	__fsub
	ld	(iy + 44), bc
	ld	(iy + 47), a
BB1_13:
	ld	a, d
	or	a, a
	jq	nz, BB1_17
	ld	a, 0
	jq	BB1_18
BB1_15:
	ld	iy, (ix + 6)
	ld	hl, 3
	ld	(iy + 51), hl
BB1_16:
	ld	iy, (_current_context)
	ld	iy, (iy + 3)
	ld	(iy + 1), 1
	jq	BB1_44
BB1_17:
	ld	a, 1
BB1_18:
	ld	(ix + -3), a
	ld	hl, 2
	push	hl
	call	_optix_DefaultKeyIsDown
	pop	hl
	or	a, a
	jq	z, BB1_21
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	bc, (iy + 36)
	ld	a, (iy + 39)
	ld	hl, (iy + 44)
	ld	iy, (ix + -6)
	lea	iy, iy + 3
	ld	e, (iy)
	call	__fadd
	ld	iy, (ix + 6)
	ld	(iy + 44), bc
	ld	(iy + 47), a
	ld	a, 1
	ld	(ix + -3), a
BB1_21:
	ld	hl, 3
	push	hl
	call	_optix_DefaultKeyIsDown
	pop	hl
	or	a, a
	ld	iy, (ix + 6)
	lea	hl, iy + 40
	ld	(ix + -6), hl
	jq	z, BB1_23
	ld	hl, (iy + 36)
	ld	e, (iy + 39)
	ld	bc, (iy + 40)
	ld	iy, (ix + -6)
	lea	iy, iy + 3
	ld	a, (iy)
	ld	iy, (ix + 6)
	call	__fsub
	ld	(iy + 40), bc
	ld	(iy + 43), a
	ld	a, 1
	ld	(ix + -3), a
BB1_23:
	ld	hl, 4
	push	hl
	call	_optix_DefaultKeyIsDown
	pop	hl
	or	a, a
	jq	nz, BB1_26
	ld	a, (ix + -3)
	ld	l, 1
	xor	a, l
	bit	0, a
	ld	e, 64
	jq	nz, BB1_43
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	hl, (iy + 36)
	ld	(ix + -3), hl
	ld	a, (iy + 39)
	ld	(ix + -11), a
	ld	hl, (iy + 40)
	ld	(ix + -6), hl
	ld	a, (iy + 43)
	ld	(ix + -12), a
	jq	BB1_27
BB1_26:
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	bc, (iy + 36)
	ld	a, (iy + 39)
	ld	hl, (iy + 40)
	ld	iy, (ix + -6)
	lea	iy, iy + 3
	ld	e, (iy)
	ld	(ix + -3), bc
	ld	(ix + -11), a
	call	__fadd
	ld	(ix + -6), bc
	ld	iy, (ix + 6)
	ld	(iy + 40), bc
	ld	(ix + -12), a
	ld	(iy + 43), a
	ld	e, 64
BB1_27:
	ld	iy, 2097152
	ld	d, 65
	ld	bc, (ix + -9)
	ld	a, (ix + -10)
	ld	hl, -6291456
	call	__fmul
	ld	hl, (ix + -3)
	ld	e, (ix + -11)
	call	__fadd
	ld	(ix + -3), iy
	lea	hl, iy + 0
	ld	e, d
	call	__fcmp
	jq	m, BB1_29
	ld	l, 0
	jq	BB1_30
BB1_29:
	ld	l, 1
BB1_30:
	ld	e, (ix + -12)
	bit	0, l
	jq	nz, BB1_33
	ld	(ix + -3), bc
BB1_33:
	bit	0, l
	jq	nz, BB1_35
	ld	d, a
BB1_35:
	ld	iy, (ix + 6)
	ld	hl, (ix + -3)
	ld	(iy + 36), hl
	ld	(iy + 39), d
	ld	bc, (ix + -6)
	ld	a, e
	call	__ftol
	push	bc
	pop	de
	ld	(iy + 1), de
	ld	bc, (iy + 44)
	ld	a, (iy + 47)
	call	__ftol
	ld	(iy + 4), bc
	push	bc
	pop	iy
	ld	bc, 305
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	m, BB1_37
	ld	de, 304
	lea	hl, iy + 0
	ld	iy, (ix + 6)
	ld	(iy + 1), de
	push	hl
	pop	iy
BB1_37:
	ld	bc, 225
	lea	hl, iy + 0
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	m, BB1_39
	ld	hl, 224
	ld	iy, (ix + 6)
	ld	(iy + 4), hl
	push	hl
	pop	iy
BB1_39:
	ld	bc, 0
	ex	de, hl
	or	a, a
	sbc	hl, bc
	call	__setflag
	ld	de, 0
	jq	p, BB1_41
	lea	hl, iy + 0
	ld	iy, (ix + 6)
	ld	(iy + 1), de
	push	hl
	pop	iy
BB1_41:
	lea	hl, iy + 0
	ld	bc, 0
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB1_44
	ld	iy, (ix + 6)
	ld	(iy + 4), de
	jq	BB1_44
BB1_43:
	ld	iy, (_current_context)
	ld	iy, (iy + 9)
	ld	hl, -6291456
	ld	(iy + 36), hl
	ld	(iy + 39), e
BB1_44:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_RenderCursor_default
_optix_RenderCursor_default:
	ld	hl, -58
	call	__frameset
	ld	bc, (ix + 6)
	ld	hl, (_current_context)
	ld	iy, (hl)
	ld	a, (iy)
	ld	e, 1
	xor	a, e
	bit	0, a
	jq	z, BB2_6
	push	bc
	pop	iy
	ld	hl, (iy + 54)
	ld	(ix + -46), hl
	call	_gfx_GetDraw
	ld	l, a
	ld	(ix + -43), hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	hl, 26
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	iy, (ix + 6)
	ld	iy, (iy + 54)
	ld	a, (iy)
	cp	a, 3
	jq	nz, BB2_9
	ld	de, 159
	lea	bc, iy + 0
	add	iy, de
	ld	a, (iy)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB2_14
	ld	de, 132
	push	bc
	pop	iy
	add	iy, de
	ld	iy, (iy)
	ld	de, -1
	lea	hl, iy + 0
	or	a, a
	sbc	hl, de
	jq	nz, BB2_5
	ld	de, 148
	push	bc
	pop	iy
	add	iy, de
	ld	iy, (iy)
BB2_5:
	push	bc
	pea	ix + -40
	push	iy
	call	_optix_SetMenuOptionTransform
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix + -39)
	ld	de, (ix + -36)
	ld	bc, 0
	push	bc
	pop	hl
	ld	l, (ix + -33)
	ld	h, (ix + -32)
	ld	a, (ix + -31)
	ld	c, a
	push	bc
	push	hl
	push	de
	push	iy
	jq	BB2_13
BB2_6:
	push	bc
	pop	hl
	ld	a, (iy + 1)
	xor	a, e
	xor	a, e
	bit	0, a
	push	hl
	call	z, _optix_RefreshCursorBackground
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTransparentColor
	pop	hl
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	hl, (iy + 48)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, L___const.optix_RenderCursor_default.spr
	add	hl, de
	ld	hl, (hl)
	ld	de, (iy + 1)
	ld	a, (iy + 4)
	ld	c, a
	push	bc
	push	de
	push	hl
	call	_gfx_TransparentSprite_NoClip
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix + 6)
	ld	hl, (iy + 1)
	ld	a, (iy + 4)
	ld	de, 16
	push	de
	push	de
	ld	e, a
	push	de
	push	hl
	ld	hl, 1
	push	hl
	call	_gfx_BlitRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix + 6)
	ld	hl, (iy + 30)
	ld	a, (iy + 33)
	ld	de, 16
	push	de
	push	de
	ld	e, a
	push	de
	push	hl
	ld	hl, 1
	push	hl
	call	_gfx_BlitRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	jq	BB2_15
BB2_9:
	ld	hl, (ix + -46)
	cp	a, 5
	jq	nz, BB2_11
	ld	de, (iy + 30)
	ld	(ix + -52), de
	push	hl
	pop	iy
	ld	hl, (iy + 1)
	dec	hl
	ld	(ix + -58), hl
	ld	hl, (iy + 4)
	ld	(ix + -49), hl
	ld	c, (iy + 7)
	ld	b, (iy + 8)
	ld	de, 0
	push	de
	pop	hl
	ld	l, c
	ld	h, b
	ld	bc, 2
	add	hl, bc
	ld	(ix + -55), hl
	ld	a, (iy + 9)
	push	de
	pop	hl
	ld	l, a
	ld	iy, (ix + -52)
	ld	e, (iy + 9)
	inc	hl
	add	hl, de
	push	hl
	ld	hl, (ix + -55)
	push	hl
	ld	hl, (ix + -49)
	push	hl
	ld	hl, (ix + -58)
	jq	BB2_12
BB2_11:
	push	hl
	pop	iy
	ld	hl, (iy + 1)
	ld	(ix + -49), hl
	ld	de, (iy + 4)
	ld	bc, 0
	push	bc
	pop	hl
	ld	l, (iy + 7)
	ld	h, (iy + 8)
	ld	a, (iy + 9)
	ld	c, a
	push	bc
	push	hl
	push	de
	ld	hl, (ix + -49)
BB2_12:
	push	hl
BB2_13:
	call	_gfx_Rectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
BB2_14:
	ld	hl, (ix + -43)
	push	hl
	call	_gfx_SetDraw
BB2_15:
	pop	hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_RefreshCursorBackground
_optix_RefreshCursorBackground:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	hl, (iy + 57)
	ld	de, (iy + 1)
	ld	bc, (iy + 4)
	push	bc
	push	de
	push	hl
	call	_gfx_GetSprite
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_RenderCursorBackground
_optix_RenderCursorBackground:
	call	__frameset0
	ld	hl, (_current_context)
	ld	hl, (hl)
	ld	a, (hl)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB4_2
	ld	iy, (ix + 6)
	ld	hl, (iy + 57)
	ld	de, (iy + 30)
	ld	bc, (iy + 33)
	push	bc
	push	de
	push	hl
	call	_gfx_Sprite
	pop	hl
	pop	hl
	pop	hl
BB4_2:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_FindNearestElement
_optix_FindNearestElement:
	ld	hl, -27
	call	__frameset
	ld	a, (ix + 6)
	ld	iy, (ix + 9)
	ld	bc, 0
	cp	a, 4
	jq	z, BB5_46
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB5_46
	ld	hl, (ix + 12)
	push	hl
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB5_46
	ld	hl, 0
	ld	(ix + -3), hl
	ld	hl, (_current_context)
	ld	(ix + -9), hl
	lea	hl, iy + 4
	ld	(ix + -15), hl
	inc	iy
	ld	(ix + -18), iy
	ld	(ix + -12), bc
	push	de
	pop	iy
BB5_4:
	ld	de, (iy)
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB5_45
	ld	(ix + -6), iy
	ld	iy, (ix + -9)
	ld	iy, (iy + 9)
	ld	bc, (iy + 54)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	push	de
	pop	iy
	jq	z, BB5_8
	ld	a, (iy + 16)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB5_8
	ld	(ix + -21), iy
	ld	a, (iy + 15)
	xor	a, l
	bit	0, a
	jq	z, BB5_9
BB5_8:
	ld	iy, (ix + -6)
BB5_44:
	lea	iy, iy + 3
	jq	BB5_4
BB5_9:
	ld	bc, 0
	ld	a, (ix + 6)
	cp	a, 4
	ld	hl, 0
	jq	nc, BB5_25
	ld	a, (ix + 6)
	ld	c, a
	ld	hl, LJTI5_0
	add	hl, bc
	add	hl, bc
	add	hl, bc
	ld	hl, (hl)
	ld	iy, (ix + -21)
	lea	de, iy + 4
	ld	(ix + -27), de
	lea	bc, iy + 0
	inc	bc
	jp	(hl)
BB5_11:
	ld	(ix + -27), bc
	ld	bc, (iy + 4)
	ld	iy, (ix + 9)
	ld	de, (iy + 4)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jq	BB5_20
BB5_12:
	ld	de, (iy + 1)
	ld	iy, (ix + 9)
	ld	bc, (iy + 1)
	push	de
	pop	hl
	push	bc
	pop	iy
	or	a, a
	sbc	hl, bc
	call	__setflag
	ld	a, 1
	jq	m, BB5_14
	ld	a, 0
BB5_14:
	ex	de, hl
	lea	de, iy + 0
	or	a, a
	sbc	hl, de
	jq	BB5_15
BB5_16:
	ld	bc, (iy + 1)
	ld	iy, (ix + 9)
	ld	hl, (iy + 1)
	push	hl
	pop	iy
	or	a, a
	sbc	hl, bc
	call	__setflag
	ld	a, 1
	jq	m, BB5_18
	ld	a, 0
BB5_18:
	push	bc
	pop	hl
	lea	bc, iy + 0
	or	a, a
	sbc	hl, bc
BB5_15:
	push	hl
	pop	de
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	(ix + -24), hl
	ld	bc, (ix + -15)
	ld	iy, (ix + -27)
	jq	BB5_23
BB5_19:
	ld	(ix + -27), bc
	ld	bc, (iy + 4)
	ld	iy, (ix + 9)
	ld	de, (iy + 4)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
BB5_20:
	call	__setflag
	ld	a, 1
	jq	m, BB5_22
	ld	a, 0
BB5_22:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	(ix + -24), hl
	ld	iy, (ix + -27)
	ld	bc, (ix + -18)
BB5_23:
	ld	hl, (iy)
	push	bc
	pop	iy
	ld	bc, (iy)
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	de, (ix + -24)
	add	hl, de
	bit	0, a
	jq	nz, BB5_25
	or	a, a
	sbc	hl, hl
BB5_25:
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	e, 1
	push	hl
	pop	bc
	jq	nz, BB5_27
	ld	e, 0
BB5_27:
	ld	hl, (ix + -12)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	a, 1
	ld	iy, (ix + -6)
	jq	nz, BB5_29
	ld	a, 0
BB5_29:
	ld	(ix + -24), a
	and	a, e
	ld	hl, (ix + -12)
	or	a, a
	sbc	hl, bc
	call	__setflag
	ld	l, 1
	jq	m, BB5_31
	ld	l, 0
BB5_31:
	ld	(ix + -27), l
	ld	hl, (ix + -12)
	or	a, a
	sbc	hl, bc
	call	__setflag
	ld	l, 1
	jq	p, BB5_33
	ld	l, 0
BB5_33:
	and	a, l
	ld	d, a
	ld	hl, (ix + -12)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	a, 1
	jq	z, BB5_35
	ld	a, 0
BB5_35:
	and	a, e
	or	a, d
	bit	0, a
	jq	nz, BB5_37
	ld	hl, (ix + -3)
	ld	(ix + -21), hl
BB5_37:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	l, 1
	jq	z, BB5_39
	ld	l, 0
BB5_39:
	ld	a, (ix + -27)
	or	a, l
	ld	d, a
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	l, 1
	jq	z, BB5_41
	ld	l, 0
BB5_41:
	ld	a, (ix + -24)
	or	a, l
	ld	l, a
	ld	a, d
	and	a, l
	bit	0, a
	jq	nz, BB5_43
	ld	(ix + -12), bc
BB5_43:
	ld	hl, (ix + -21)
	ld	(ix + -3), hl
	jq	BB5_44
BB5_45:
	ld	iy, (ix + -3)
BB5_46:
	lea	hl, iy + 0
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
lJTI5_0:
	private	LJTI5_0
LJTI5_0:
	dl	BB5_11
	dl	BB5_19
	dl	BB5_12
	dl	BB5_16

	section	.text,"ax",@progbits
	public	_optix_SetCurrentSelection
_optix_SetCurrentSelection:
	call	__frameset0
	ld	iy, (_current_context)
	ld	hl, (iy)
	ld	a, (hl)
	ld	l, 1
	xor	a, l
	xor	a, l
	bit	0, a
	jq	nz, BB6_2
	ld	hl, (ix + 6)
	ld	iy, (iy + 9)
	push	hl
	pop	de
	ld	(iy + 54), hl
	lea	bc, iy + 0
	push	de
	pop	iy
	ld	hl, (iy + 1)
	push	bc
	pop	iy
	ld	(iy + 1), hl
	push	de
	pop	iy
	ld	hl, (iy + 4)
	push	bc
	pop	iy
	ld	(iy + 4), hl
BB6_2:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	L___const.optix_RenderCursor_default.spr
L___const.optix_RenderCursor_default.spr:
	dl	_cursor_normal_data
	dl	_cursor_pointer_data
	dl	_cursor_move_data
	dl	_cursor_resize_horizontal_data
	dl	_cursor_resize_vertical_data
	dl	_cursor_text_data
	dl	_cursor_text_upper_data
	dl	_cursor_text_lower_data
	dl	_cursor_text_math_data

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	_cursor_resize_vertical_data
	extern	_gfx_BlitRectangle
	extern	__Unwind_SjLj_Register
	extern	_optix_SetMenuOptionTransform
	extern	__frameset
	extern	_malloc
	extern	_gfx_SetTransparentColor
	extern	__fadd
	extern	_cursor_text_math_data
	extern	_cursor_pointer_data
	extern	_cursor_resize_horizontal_data
	extern	_gfx_GetSprite
	extern	_gfx_GetDraw
	extern	__fmul
	extern	__ftol
	extern	_gfx_SetDraw
	extern	__setflag
	extern	_cursor_text_upper_data
	extern	_current_context
	extern	_cursor_text_lower_data
	extern	__Unwind_SjLj_Unregister
	extern	__ixor
	extern	_gfx_AllocSprite
	extern	__imulu
	extern	_cursor_move_data
	extern	_gfx_SetColor
	extern	_gfx_Rectangle
	extern	_gfx_Sprite
	extern	__ltof
	extern	_cursor_normal_data
	extern	_gfx_TransparentSprite_NoClip
	extern	_optix_DefaultKeyIsDown
	extern	_cursor_text_data
	extern	__fcmp
	extern	__frameset0
	extern	__fsub
