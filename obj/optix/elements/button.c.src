	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_optix_UpdateButton_default
_optix_UpdateButton_default:
	ld	hl, -4
	call	__frameset
	ld	iy, (ix + 6)
	ld	d, 0
	ld	a, (iy + 15)
	ld	e, 1
	xor	a, e
	bit	0, a
	jq	nz, BB0_19
	ld	iy, (_current_context)
	ld	(ix + -3), iy
	ld	iy, (iy + 3)
	ld	a, (iy + 4)
	ld	iy, (ix + 6)
	ld	l, (iy + 37)
	cp	a, l
	jq	nz, BB0_5
BB0_2:
	ld	(ix + -4), d
	ld	hl, (iy + 30)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB0_4
	ld	de, (iy + 33)
	push	de
	call	__indcallhl
	ld	iy, (ix + 6)
	pop	hl
	ld	hl, (_current_context)
	ld	(ix + -3), hl
BB0_4:
	ld	(iy + 36), 1
	jq	BB0_12
BB0_5:
	ld	hl, -720868
	ld.sis	bc, 1
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	call	__sand
	ld	a, l
	xor	a, e
	xor	a, e
	bit	0, a
	jq	nz, BB0_8
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	5, a
	jq	nz, BB0_8
	ld	a, (iy + 36)
	ld	(ix + -4), a
	ld	(iy + 36), 0
	jq	BB0_12
BB0_8:
	ld	a, (iy + 36)
	xor	a, e
	xor	a, e
	bit	0, a
	jq	nz, BB0_11
	ld	a, (iy + 14)
	xor	a, e
	bit	0, a
	jq	z, BB0_2
BB0_11:
	ld	(ix + -4), d
BB0_12:
	lea	de, iy + 0
	ld	iy, (ix + -3)
	ld	hl, (iy + 9)
	push	de
	push	hl
	call	_optix_CheckTransformOverlap
	ld	iy, (ix + 6)
	pop	hl
	pop	hl
	ld	l, (iy + 14)
	ld	e, 1
	xor	a, e
	bit	0, a
	jq	nz, BB0_16
	ld	a, e
	ld	de, 1
	ld	(iy + 14), 1
	ld	iy, (_current_context)
	ld	iy, (iy + 9)
	ld	(iy + 48), de
	ld	e, a
	ld	iy, (ix + 6)
	ld	a, l
	xor	a, e
	bit	0, a
	ld	a, (ix + -4)
	jq	z, BB0_17
	jq	BB0_18
BB0_16:
	ld	(iy + 36), 0
	ld	(iy + 14), 0
	ld	a, l
	or	a, (ix + -4)
BB0_17:
	xor	a, e
	bit	0, a
	jq	nz, BB0_19
BB0_18:
	ld	(iy + 17), 1
	ld	hl, (iy + 27)
	push	hl
	call	_optix_RecursiveSetNeedsRedraw
	pop	hl
BB0_19:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_RenderButton_default
_optix_RenderButton_default:
	ld	hl, -6
	call	__frameset
	ld	iy, (ix + 6)
	ld	a, (iy + 15)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB1_14
	ld	a, (iy + 17)
	xor	a, l
	bit	0, a
	jq	nz, BB1_14
	ld	a, (iy + 14)
	xor	a, l
	bit	0, a
	jq	z, BB1_6
	ld	a, (iy + 38)
	xor	a, l
	xor	a, l
	bit	0, a
	jq	nz, BB1_5
	ld	hl, 14
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	iy, (ix + 6)
	ld	hl, (iy + 1)
	ld	(ix + -3), hl
	ld	hl, (iy + 4)
	ld	(ix + -6), hl
	ld	c, (iy + 7)
	ld	b, (iy + 8)
	or	a, a
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, c
	ld	d, b
	ld	a, (iy + 9)
	ld	l, a
	push	hl
	push	de
	ld	hl, (ix + -6)
	push	hl
	ld	hl, (ix + -3)
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
BB1_5:
	ld	hl, 21
	push	hl
	ld	hl, 18
	jq	BB1_10
BB1_6:
	ld	a, (iy + 36)
	xor	a, l
	ld	l, (iy + 1)
	ld	h, (iy + 2)
	ld	(ix + -3), hl
	ld	e, (iy + 4)
	ld	c, (iy + 7)
	ld	b, (iy + 8)
	ld	d, (iy + 9)
	bit	0, a
	jq	z, BB1_8
	ld	hl, 8
	push	hl
	dec	hl
	push	hl
	ld	hl, 15
	push	hl
	ld	l, d
	push	hl
	push	bc
	ld	l, e
	push	hl
	ld	hl, (ix + -3)
	push	hl
	call	_optix_OutlinedRectangle_WithBevel
	ld	hl, 21
	add	hl, sp
	ld	sp, hl
	ld	hl, 21
	jq	BB1_9
BB1_8:
	ld	hl, 7
	push	hl
	inc	hl
	push	hl
	ld	hl, 16
	push	hl
	ld	l, d
	push	hl
	push	bc
	ld	l, e
	push	hl
	ld	hl, (ix + -3)
	push	hl
	call	_optix_OutlinedRectangle_WithBevel
	ld	hl, 21
	add	hl, sp
	ld	sp, hl
	ld	hl, 23
BB1_9:
	push	hl
	dec	hl
BB1_10:
	push	hl
	call	_optix_SetTextColor
	pop	hl
	pop	hl
	ld	iy, (ix + 6)
	ld	hl, (iy + 27)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	push	hl
	call	nz, _optix_RenderStack
	pop	hl
	ld	hl, 25
	push	hl
	dec	hl
	push	hl
	call	_optix_SetTextColor
	pop	hl
	pop	hl
BB1_14:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	_optix_CheckTransformOverlap
	extern	_current_context
	extern	__Unwind_SjLj_Register
	extern	__Unwind_SjLj_Unregister
	extern	__frameset
	extern	_optix_RenderStack
	extern	__indcallhl
	extern	_gfx_SetColor
	extern	_gfx_FillRectangle
	extern	_optix_RecursiveSetNeedsRedraw
	extern	_optix_OutlinedRectangle_WithBevel
	extern	_optix_SetTextColor
	extern	__sand
