	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_optix_GetMenuOptionWidth
_optix_GetMenuOptionWidth:
	ld	hl, -6
	call	__frameset
	ld	iy, (ix + 9)
	ld	l, (iy + 7)
	ld	h, (iy + 8)
	ld	de, 0
	ld	e, l
	ld	d, h
	ld	bc, 142
	add	iy, bc
	ld	bc, (iy)
	push	de
	pop	hl
	call	__idivs
	push	hl
	pop	iy
	ld	hl, (ix + 6)
	inc	hl
	call	__irems
	ld	(ix + -6), hl
	ld	(ix + -3), iy
	lea	hl, iy + 0
	call	__imulu
	push	hl
	pop	bc
	ex	de, hl
	or	a, a
	sbc	hl, bc
	push	hl
	pop	iy
	ld	hl, (ix + -6)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB0_2
	ld	iy, 0
BB0_2:
	ld	de, (ix + -3)
	add	iy, de
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_GetMenuOptionHeight
_optix_GetMenuOptionHeight:
	ld	hl, -12
	call	__frameset
	ld	iy, (ix + 9)
	ld	a, (iy + 9)
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	(ix + -3), hl
	ld	de, 139
	add	iy, de
	ld	bc, (iy)
	ld	(ix + -12), bc
	call	__idivs
	push	hl
	pop	iy
	ld	de, 142
	ld	hl, (ix + 9)
	add	hl, de
	ld	bc, (hl)
	ld	hl, (ix + 6)
	call	__idivs
	ld	(ix + -9), hl
	ld	bc, (ix + -12)
	push	bc
	pop	de
	dec	de
	ld	(ix + -6), iy
	lea	hl, iy + 0
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix + -3)
	or	a, a
	sbc	hl, bc
	push	hl
	pop	bc
	ld	hl, (ix + -9)
	or	a, a
	sbc	hl, de
	jq	z, BB1_2
	ld	bc, 0
BB1_2:
	ld	a, c
	ld	hl, (ix + -6)
	add	a, l
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_GetMenuOptionRelativeX
_optix_GetMenuOptionRelativeX:
	ld	hl, -3
	call	__frameset
	ld	de, (ix + 6)
	ld	iy, (ix + 9)
	ld	bc, 142
	lea	hl, iy + 0
	add	hl, bc
	ld	bc, (hl)
	push	de
	pop	hl
	call	__irems
	ld	(ix + -3), hl
	push	iy
	push	de
	call	_optix_GetMenuOptionWidth
	pop	de
	pop	de
	ld	bc, 0
	ld	c, l
	ld	b, h
	ld	hl, (ix + -3)
	call	__imulu
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_GetMenuOptionRelativeY
_optix_GetMenuOptionRelativeY:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, 136
	push	de
	pop	iy
	add	iy, bc
	ld	bc, (iy)
	or	a, a
	sbc	hl, bc
	ld	bc, 142
	push	de
	pop	iy
	add	iy, bc
	ld	bc, (iy)
	call	__idivs
	ld	(ix + -3), hl
	push	de
	ld	hl, (ix + 6)
	push	hl
	call	_optix_GetMenuOptionHeight
	pop	hl
	pop	hl
	ld	bc, 0
	ld	c, a
	ld	hl, (ix + -3)
	call	__imulu
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_SetMenuOptionTransform
_optix_SetMenuOptionTransform:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 6)
	ld	iy, (ix + 12)
	ld	de, (iy + 1)
	ld	(ix + -3), de
	push	iy
	push	hl
	call	_optix_GetMenuOptionRelativeX
	pop	de
	pop	de
	ld	de, (ix + -3)
	add	hl, de
	ld	iy, (ix + 9)
	ld	(iy + 1), hl
	ld	iy, (ix + 12)
	ld	hl, (iy + 4)
	ld	(ix + -3), hl
	push	iy
	ld	hl, (ix + 6)
	push	hl
	call	_optix_GetMenuOptionRelativeY
	pop	de
	pop	de
	ld	de, (ix + -3)
	add	hl, de
	ld	iy, (ix + 9)
	ld	(iy + 4), hl
	ld	hl, (ix + 12)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_optix_GetMenuOptionWidth
	pop	de
	pop	de
	ld	iy, (ix + 9)
	ld	(iy + 7), l
	ld	(iy + 8), h
	ld	hl, (ix + 12)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_optix_GetMenuOptionHeight
	pop	hl
	pop	hl
	ld	iy, (ix + 9)
	ld	(iy + 9), a
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_UpdateMenu_default
_optix_UpdateMenu_default:
	ld	hl, -21
	call	__frameset
	ld	iy, (ix + 6)
	xor	a, a
	ld	de, 132
	lea	hl, iy + 0
	add	hl, de
	ld	(ix + -3), hl
	ld	de, (hl)
	ld	bc, -1
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	ld	bc, 148
	ld	(ix + -6), a
	jq	nz, BB5_2
	ld	a, (iy + 14)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB5_4
	jq	BB5_5
BB5_2:
	ld	iy, (ix + 6)
	add	iy, bc
	ld	(iy), de
	ld	iy, (ix + 6)
	ld	a, (iy + 14)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	z, BB5_5
	ld	de, 135
	add	iy, de
	ld	(iy), 1
BB5_4:
	ld	hl, -1
	ld	iy, (ix + -3)
	ld	(iy), hl
	jq	BB5_74
BB5_5:
	lea	hl, iy + 0
	ld	de, 135
	add	hl, de
	ld	(ix + -9), hl
	ld	(hl), 0
	or	a, a
	sbc	hl, hl
	push	hl
	call	_optix_DefaultKeyIsDown
	pop	hl
	and	a, 1
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	z, BB5_7
	or	a, a
	sbc	hl, hl
	push	hl
	call	_optix_DefaultKeyIsDown
	pop	hl
	bit	2, a
	jq	nz, BB5_11
	jq	BB5_12
BB5_7:
	ld	de, 151
	ld	iy, (ix + 6)
	add	iy, de
	ld	hl, (iy)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB5_11
	ld	de, 157
	ld	bc, (ix + 6)
	push	bc
	pop	iy
	add	iy, de
	ld	a, (iy)
	ld	e, 1
	xor	a, e
	bit	0, a
	push	bc
	pop	de
	jq	z, BB5_10
	ld	de, 154
	ld	iy, (ix + 6)
	add	iy, de
	ld	de, (iy)
BB5_10:
	push	de
	call	__indcallhl
	pop	hl
BB5_11:
	ld	iy, (ix + 6)
	ld	(iy + 17), 1
BB5_12:
	ld	hl, (ix + -3)
	ld	hl, (hl)
	ld	iy, (_current_context)
	ld	(ix + -12), iy
	ld	iy, (iy)
	ld	a, (iy)
	ld	de, -1
	or	a, a
	sbc	hl, de
	ld	bc, 0
	ld	l, 1
	ld	e, l
	jq	nz, BB5_16
	ld	(ix + -15), a
	xor	a, e
	bit	0, a
	jq	nz, BB5_15
	ld	iy, (ix + 6)
	ld	de, 148
	add	iy, de
	ld	hl, (iy)
	ld	iy, (ix + -3)
	ld	(iy), hl
	ld	l, 1
	ld	e, l
BB5_15:
	ld	hl, (ix + -9)
	ld	(hl), 1
	ld	a, (ix + -15)
BB5_16:
	xor	a, e
	bit	0, a
	jq	z, BB5_21
	ld	iy, (ix + -12)
	ld	iy, (iy + 9)
	ld	hl, (iy + 54)
	ld	iy, (ix + 6)
	lea	de, iy + 0
	or	a, a
	sbc	hl, de
	jq	nz, BB5_61
	ld	hl, 1
	push	hl
	call	_optix_DefaultKeyIsDown
	pop	hl
	and	a, 1
	ld	l, 1
	xor	a, l
	ld	hl, 2
	bit	0, a
	ld	a, 0
	ld	c, a
	jq	nz, BB5_38
	ld	hl, (ix + -3)
	ld	hl, (hl)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB5_33
	ld	c, 0
	jq	BB5_34
BB5_21:
	ld	hl, (ix + 6)
	push	hl
	push	bc
	call	_optix_GetMenuOptionWidth
	ld	(ix + -12), l
	ld	(ix + -11), h
	pop	hl
	pop	hl
	ld	hl, (ix + 6)
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_optix_GetMenuOptionHeight
	ld	(ix + -15), a
	pop	hl
	pop	hl
	ld	hl, 5
	push	hl
	call	_optix_DefaultKeyIsDown
	pop	hl
	and	a, 1
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	z, BB5_24
	ld	hl, 6
	push	hl
	call	_optix_DefaultKeyIsDown
	pop	hl
	and	a, 1
	ld	l, 1
	xor	a, l
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	de, 136
	add	hl, de
	ld	(ix + -6), hl
	ld	hl, (hl)
	ld	(ix + -9), hl
	ld	de, 142
	add	iy, de
	ld	de, (iy)
	bit	0, a
	jq	z, BB5_27
	ld	(ix + -6), de
	ld	hl, (ix + 6)
	ex	de, hl
	ld	a, (ix + -15)
	jq	BB5_32
BB5_24:
	ld	hl, (ix + 6)
	ld	de, 136
	add	hl, de
	ld	(ix + -9), hl
	ld	bc, (hl)
	ld	iy, (ix + 6)
	ld	de, 142
	add	iy, de
	ld	hl, (iy)
	ld	(ix + -6), hl
	ld	(ix + -21), bc
	add	hl, bc
	ld	(ix + -18), hl
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	de, 145
	add	iy, de
	ld	de, (iy)
	push	hl
	pop	iy
	ld	bc, 139
	add	iy, bc
	ld	hl, (iy)
	dec	hl
	ld	bc, (ix + -6)
	call	__imulu
	push	hl
	pop	bc
	ex	de, hl
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
	ld	bc, (ix + -18)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	m, BB5_26
	ld	bc, (ix + -21)
BB5_26:
	ld	hl, (ix + -9)
	ld	(hl), bc
	jq	BB5_30
BB5_27:
	ld	iy, (ix + -6)
	ld	hl, (ix + -9)
	or	a, a
	sbc	hl, de
	ld	(ix + -9), de
	push	hl
	pop	de
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	push	de
	pop	bc
	call	__setflag
	jq	p, BB5_29
	ld	bc, 0
BB5_29:
	ld	(iy), bc
	ld	hl, (ix + -9)
	ld	(ix + -6), hl
BB5_30:
	ld	iy, (ix + 6)
	ld	a, (ix + -15)
	ld	(iy + 17), 1
	ld	(ix + -9), bc
	lea	de, iy + 0
BB5_32:
	ld	iy, (_current_context)
	ld	iy, (iy + 9)
	ld	(ix + -15), iy
	ld	hl, (iy + 4)
	push	de
	pop	iy
	ld	de, (iy + 4)
	or	a, a
	sbc	hl, de
	ld	de, 0
	ld	e, a
	push	de
	pop	bc
	call	__idivs
	push	hl
	pop	bc
	ld	hl, (ix + -6)
	call	__imulu
	ld	(ix + -6), hl
	ld	iy, (ix + -15)
	ld	hl, (iy + 1)
	ld	iy, (ix + 6)
	ld	bc, (iy + 1)
	or	a, a
	sbc	hl, bc
	ld	c, (ix + -12)
	ld	b, (ix + -11)
	ld	e, c
	ld	d, b
	push	de
	pop	bc
	call	__idivs
	push	hl
	pop	de
	ld	hl, (ix + -6)
	ld	bc, (ix + -9)
	add	hl, bc
	add	hl, de
	ld	bc, 0
	jq	BB5_62
BB5_33:
	ld	c, 1
BB5_34:
	ld	de, 0
	bit	0, c
	jq	nz, BB5_37
	ld	iy, (ix + 6)
	ld	de, 142
	add	iy, de
	ld	de, (iy)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
BB5_37:
	ld	hl, (ix + -3)
	ld	(hl), de
	ld	a, 1
	ld	(ix + -6), a
	ld	hl, 2
BB5_38:
	ld	(ix + -9), c
	push	hl
	call	_optix_DefaultKeyIsDown
	pop	hl
	and	a, 1
	ld	l, 1
	xor	a, l
	ld	hl, 3
	bit	0, a
	jq	nz, BB5_47
	ld	hl, (ix + -3)
	ld	de, (hl)
	ld	iy, (ix + 6)
	ld	bc, 145
	add	iy, bc
	ld	bc, (iy)
	dec	bc
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	z, BB5_41
	ld	a, 0
	jq	BB5_42
BB5_41:
	ld	a, 1
BB5_42:
	ld	iy, (ix + 6)
	bit	0, a
	ld	(ix + -9), a
	jq	z, BB5_45
	push	de
	pop	iy
	jq	BB5_46
BB5_45:
	ld	bc, 142
	add	iy, bc
	ld	iy, (iy)
	add	iy, de
BB5_46:
	ld	hl, (ix + -3)
	ld	(hl), iy
	ld	a, 1
	ld	(ix + -6), a
	ld	hl, 3
BB5_47:
	push	hl
	call	_optix_DefaultKeyIsDown
	pop	hl
	and	a, 1
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB5_51
	ld	hl, (ix + -3)
	ld	de, (hl)
	ld	iy, (ix + 6)
	ld	bc, 142
	add	iy, bc
	ld	bc, (iy)
	push	de
	pop	hl
	call	__irems
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	a, 1
	ld	(ix + -9), a
	jq	z, BB5_51
	dec	de
	ld	hl, (ix + -3)
	ld	(hl), de
	xor	a, a
	ld	(ix + -9), a
	ld	a, 1
	ld	(ix + -6), a
BB5_51:
	ld	hl, 4
	push	hl
	call	_optix_DefaultKeyIsDown
	pop	hl
	and	a, 1
	ld	l, 1
	xor	a, l
	bit	0, a
	ld	c, (ix + -9)
	jq	nz, BB5_53
	ld	hl, (ix + -3)
	ld	de, (hl)
	inc	de
	ld	iy, (ix + 6)
	ld	bc, 142
	add	iy, bc
	ld	bc, (iy)
	push	de
	pop	hl
	call	__irems
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	l, 1
	ld	c, 1
	jq	nz, BB5_54
BB5_53:
	ld	a, (ix + -6)
	xor	a, l
	bit	0, a
	jq	z, BB5_55
	jq	BB5_58
BB5_54:
	ld	hl, (ix + -3)
	ld	(hl), de
	ld	l, 1
	xor	a, a
	ld	c, a
BB5_55:
	ld	de, 158
	ld	iy, (ix + 6)
	add	iy, de
	ld	a, (iy)
	xor	a, l
	bit	0, a
	jq	nz, BB5_58
	ld	de, 159
	ld	iy, (ix + 6)
	add	iy, de
	ld	a, (iy)
	xor	a, l
	xor	a, l
	bit	0, a
	jq	nz, BB5_58
	ld	iy, (_current_context)
	ld	hl, (iy + 15)
	ld	de, (ix + 6)
	push	de
	push	hl
	ld	(ix + -9), c
	call	_optix_IntelligentRecursiveSetNeedsRedraw
	ld	iy, (ix + 6)
	pop	hl
	pop	hl
	bit	0, (ix + -9)
	jq	BB5_59
BB5_58:
	bit	0, c
	ld	iy, (ix + 6)
BB5_59:
	ld	bc, 0
	jq	nz, BB5_61
	ld	iy, (_current_context)
	ld	iy, (iy + 9)
	ld	hl, 4
	ld	(iy + 51), hl
	ld	iy, (ix + 6)
BB5_61:
	ld	hl, (ix + -3)
	ld	hl, (hl)
BB5_62:
	ld	de, 0
	ld	(ix + -6), hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	m, BB5_66
	ld	de, 145
	add	iy, de
	ld	de, (iy)
	ld	bc, (ix + -6)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	m, BB5_65
	dec	de
	push	de
	pop	bc
BB5_65:
	ld	iy, (ix + 6)
BB5_66:
	ld	hl, (ix + -3)
	ld	(hl), bc
	ld	de, 136
	add	iy, de
	ld	(ix + -3), iy
	ld	de, (iy)
	push	bc
	pop	hl
	ld	(ix + -9), de
	or	a, a
	sbc	hl, de
	call	__setflag
	push	bc
	pop	de
	ld	(ix + -6), de
	jq	p, BB5_68
	ld	iy, (ix + 6)
	ld	bc, 142
	add	iy, bc
	ld	bc, (iy)
	push	de
	pop	hl
	call	__irems
	push	hl
	pop	bc
	ex	de, hl
	or	a, a
	sbc	hl, bc
	jq	BB5_70
BB5_68:
	ld	iy, (ix + 6)
	ld	bc, 139
	add	iy, bc
	ld	hl, (iy)
	dec	hl
	ld	iy, (ix + 6)
	ld	bc, 142
	add	iy, bc
	ld	bc, (iy)
	ld	iy, (ix + 6)
	ld	(ix + -12), hl
	ld	(ix + -15), bc
	call	__imulu
	push	de
	pop	bc
	ld	de, (ix + -9)
	add	hl, de
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB5_71
	ld	hl, (ix + -6)
	ld	bc, (ix + -15)
	call	__idivs
	ld	de, (ix + -12)
	or	a, a
	sbc	hl, de
	call	__imulu
BB5_70:
	ld	iy, (ix + -3)
	ld	(iy), hl
	ld	iy, (ix + 6)
	ld	(iy + 17), 1
BB5_71:
	ld	de, 129
	add	iy, de
	ld	iy, (iy)
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB5_74
	ld	bc, 3
	ld	hl, (ix + -6)
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	iy, (iy)
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB5_74
	ld	hl, (iy + 24)
	push	iy
	call	__indcallhl
	pop	hl
BB5_74:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_RenderMenuOption
_optix_RenderMenuOption:
	ld	hl, -156
	call	__frameset
	ld	hl, 0
	lea	de, ix + -49
	lea	bc, ix + -86
	lea	iy, ix + -98
	ld	(ix + -3), bc
	push	ix
	ld	bc, -144
	add	ix, bc
	ld	(ix + 0), iy
	pop	ix
	ld	bc, -138
	lea	iy, ix + 0
	add	iy, bc
	push	ix
	ld	bc, -141
	add	ix, bc
	ld	(ix + 0), iy
	pop	ix
	push	ix
	ld	bc, -147
	add	ix, bc
	ld	(ix + 0), de
	pop	ix
	ld	(ix + -98), de
	ld	bc, (ix + -3)
	push	ix
	ld	de, -153
	add	ix, de
	ld	(ix + 0), bc
	pop	ix
	ld	(ix + -95), bc
	ld	(ix + -92), hl
	ld	(ix + -89), hl
	ld	hl, 40
	push	hl
	or	a, a
	sbc	hl, hl
	push	ix
	ld	bc, -156
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	push	hl
	push	iy
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -144
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(ix + -111), hl
	ld	hl, 2
	push	hl
	ld	bc, -141
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	ld	iy, (ix + 9)
	pop	hl
	pop	hl
	ld	a, (iy + 17)
	ld	c, 1
	xor	a, c
	ld	de, 132
	lea	hl, iy + 0
	add	hl, de
	push	ix
	ld	de, -150
	add	ix, de
	ld	(ix + 0), hl
	pop	ix
	ld	de, (hl)
	ld	(ix + -3), de
	ld	de, -144
	lea	hl, ix + 0
	add	hl, de
	ld	hl, (hl)
	xor	a, c
	ld	bc, (ix + 6)
	bit	0, a
	ld	de, (ix + -3)
	jq	nz, BB6_4
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	nz, BB6_3
	ld	bc, -144
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(ix + -111), hl
	jq	BB6_5
BB6_3:
	ld	bc, 148
	ld	iy, (ix + 9)
	add	iy, bc
	ld	bc, (ix + 6)
	ld	hl, (iy)
	ld	iy, (ix + 9)
	or	a, a
	sbc	hl, bc
	ld	(ix + -3), bc
	ld	bc, -144
	lea	hl, ix + 0
	push	af
	add	hl, bc
	pop	af
	ld	hl, (hl)
	ld	bc, (ix + -3)
	jq	nz, BB6_42
BB6_4:
	ld	(ix + -111), hl
	ex	de, hl
	or	a, a
	sbc	hl, bc
	ld	a, 0
	jq	nz, BB6_6
BB6_5:
	or	a, a
	sbc	hl, hl
	push	hl
	call	_optix_DefaultKeyIsDown
	ld	bc, (ix + 6)
	ld	iy, (ix + 9)
	pop	hl
	srl	a
	and	a, 1
BB6_6:
	ld	(ix + -102), a
	ld	de, 158
	add	iy, de
	ld	a, (iy)
	ld	l, 1
	xor	a, l
	xor	a, l
	bit	0, a
	jq	nz, BB6_7
	ld	de, -150
	lea	hl, ix + 0
	add	hl, de
	ld	hl, (hl)
	ld	hl, (hl)
	or	a, a
	sbc	hl, bc
	ld	a, 0
	jq	nz, BB6_10
	ld	iy, (ix + 9)
	ld	de, 159
	add	iy, de
	ld	a, (iy)
	jq	BB6_10
BB6_7:
	ld	a, 1
BB6_10:
	ld	de, (ix + 15)
	ld	(ix + -100), a
	ld	iy, (ix + -111)
	ld	hl, (ix + 12)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB6_13
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB6_13
	ld	hl, 43
	push	hl
	ld	iy, (ix + 9)
	pea	iy + 42
	ld	bc, -147
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + 12)
	ld	(ix + -17), hl
	ld	bc, -147
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeTextTransform
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -147
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	ld	de, (ix + 15)
	ld	bc, (ix + 6)
	pop	hl
	pop	hl
	ld	iy, (ix + -111)
	jq	BB6_14
BB6_13:
	ld	hl, 0
	ld	(ix + -17), hl
BB6_14:
	ex	de, hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB6_17
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB6_17
	ld	hl, 37
	push	hl
	ld	iy, (ix + 9)
	pea	iy + 85
	ld	bc, -153
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + 15)
	ld	(ix + -56), hl
	ld	hl, 1
	push	hl
	ld	bc, -153
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	ld	bc, (ix + 6)
	pop	hl
	pop	hl
	ld	iy, (ix + -111)
	jq	BB6_18
BB6_17:
	ld	hl, 0
	ld	(ix + -56), hl
BB6_18:
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB6_39
	ld	bc, -147
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy), hl
	ld	iy, (ix + -111)
	ld	hl, (ix + -17)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB6_20
	ld	a, 0
	jq	BB6_22
BB6_20:
	ld	a, 1
BB6_22:
	and	a, 1
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	push	ix
	ld	de, -153
	add	ix, de
	ld	hl, (ix + 0)
	pop	ix
	ld	(iy), hl
	ld	de, 129
	ld	hl, (ix + 9)
	add	hl, de
	ld	de, -144
	lea	iy, ix + 0
	add	iy, de
	ld	(iy + 0), hl
	ld	iy, (hl)
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	hl, 0
	jq	z, BB6_29
	ld	de, -150
	lea	hl, ix + 0
	add	hl, de
	ld	hl, (hl)
	ld	hl, (hl)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	lea	hl, iy + 0
	add	hl, de
	ld	de, (hl)
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	lea	hl, iy + 0
	jq	z, BB6_29
	ld	hl, (ix + -17)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	c, 1
	ld	b, 0
	ld	a, c
	jq	nz, BB6_26
	ld	a, b
BB6_26:
	ld	iy, (ix + -111)
	ld	hl, (ix + -56)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB6_28
	ld	c, b
BB6_28:
	and	a, c
	ld	l, a
	ld	bc, 1
	call	__iand
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	(iy), de
	ld	bc, -144
	lea	iy, ix + 0
	add	iy, bc
	ld	hl, (iy + 0)
	ld	hl, (hl)
BB6_29:
	push	hl
	pop	iy
	ld	hl, (ix + -17)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	e, 1
	ld	d, 0
	ld	a, e
	jq	nz, BB6_31
	ld	a, d
BB6_31:
	and	a, 1
	ld	bc, 0
	ld	c, a
	ld	hl, (ix + -56)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB6_33
	ld	e, d
BB6_33:
	ld	hl, (ix + -111)
	ld	(ix + -3), bc
	push	ix
	ld	bc, -147
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	ld	a, e
	and	a, 1
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	bc, (ix + -3)
	add	hl, bc
	push	ix
	ld	bc, -144
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB6_38
	ld	de, -150
	lea	hl, ix + 0
	add	hl, de
	ld	hl, (hl)
	ld	hl, (hl)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, (iy)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB6_35
	ld	a, 0
	jq	BB6_37
BB6_35:
	ld	a, 1
BB6_37:
	and	a, 1
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	bc, -156
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), hl
BB6_38:
	ld	bc, -156
	lea	hl, ix + 0
	add	hl, bc
	ld	de, (hl)
	ld	bc, -144
	lea	iy, ix + 0
	add	iy, bc
	ld	hl, (iy + 0)
	add	hl, de
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	(ix + -3), bc
	push	ix
	ld	bc, -147
	add	ix, bc
	ld	iy, (ix + 0)
	pop	ix
	add	iy, de
	ld	hl, 0
	ld	(iy), hl
	ld	bc, (ix + -3)
	ld	bc, (ix + 6)
BB6_39:
	ld	hl, (ix + 9)
	push	hl
	ld	de, -141
	lea	hl, ix + 0
	add	hl, de
	ld	hl, (hl)
	push	hl
	push	bc
	call	_optix_SetMenuOptionTransform
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -141
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_RecursiveAlign
	pop	hl
	ld	iy, (ix + 9)
	lea	bc, iy + 0
	ld	de, 132
	add	iy, de
	ld	hl, (iy)
	ld	de, (ix + 6)
	or	a, a
	sbc	hl, de
	ld	a, 0
	jq	nz, BB6_41
	ld	de, 159
	push	bc
	pop	hl
	add	hl, de
	ld	a, (hl)
	xor	a, 1
BB6_41:
	ld	(ix + -124), a
	ld	hl, (ix + -111)
	push	hl
	call	_optix_RecursiveSetNeedsRedraw
	pop	hl
	ld	hl, (ix + -117)
	ld	bc, -141
	lea	iy, ix + 0
	add	iy, bc
	ld	de, (iy + 0)
	push	de
	call	__indcallhl
	pop	hl
BB6_42:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_RenderMenu_default
_optix_RenderMenu_default:
	ld	hl, -18
	call	__frameset
	ld	iy, (ix + 6)
	ld	a, (iy + 17)
	ld	e, 1
	xor	a, e
	xor	a, e
	bit	0, a
	jq	nz, BB7_4
	ld	bc, 132
	ld	iy, (ix + 6)
	add	iy, bc
	ld	hl, (iy)
	ld	bc, 148
	ld	iy, (ix + 6)
	add	iy, bc
	ld	bc, (iy)
	ld	iy, (ix + 6)
	or	a, a
	sbc	hl, bc
	jq	z, BB7_3
	ld	a, (iy + 14)
	xor	a, e
	xor	a, e
	bit	0, a
	jq	nz, BB7_4
BB7_3:
	ld	iy, (ix + 6)
	ld	bc, 135
	add	iy, bc
	ld	a, (iy)
	ld	iy, (ix + 6)
	xor	a, e
	bit	0, a
	jq	nz, BB7_13
BB7_4:
	ld	bc, 3
	ld	de, 136
	lea	hl, iy + 0
	add	hl, de
	ld	(ix + -12), hl
	ld	iy, (hl)
	lea	hl, iy + 0
	call	__imulu
	ld	(ix + -9), hl
	ld	bc, 139
	ld	hl, (ix + 6)
	add	hl, bc
	ld	de, 142
	ld	(ix + -6), iy
	ld	(ix + -3), iy
	ld	iy, (ix + 6)
	ld	(ix + -15), hl
BB7_5:
	ld	bc, (hl)
	add	iy, de
	ld	hl, (iy)
	call	__imulu
	ld	de, (ix + -6)
	add	hl, de
	ex	de, hl
	ld	hl, (ix + -3)
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB7_12
	ld	iy, (ix + 6)
	ld	hl, (iy + 123)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	bc, 0
	push	bc
	pop	de
	jq	z, BB7_8
	ld	de, (ix + -9)
	add	hl, de
	ld	de, (hl)
BB7_8:
	ld	(ix + -6), de
	ld	hl, (iy + 126)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB7_10
	ld	bc, (ix + -9)
	add	hl, bc
	ld	bc, (hl)
BB7_10:
	ld	(ix + -18), bc
	ld	de, 145
	add	iy, de
	ld	de, (iy)
	ld	bc, (ix + -3)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB7_12
	ld	hl, (ix + -18)
	push	hl
	ld	hl, (ix + -6)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	push	bc
	ld	(ix + -3), bc
	call	_optix_RenderMenuOption
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + -3)
	inc	hl
	ld	(ix + -3), hl
	ld	hl, (ix + -12)
	ld	hl, (hl)
	ld	(ix + -6), hl
	ld	bc, 3
	ld	hl, (ix + -9)
	add	hl, bc
	ld	(ix + -9), hl
	ld	iy, (ix + 6)
	ld	hl, (ix + -15)
	ld	de, 142
	jq	BB7_5
BB7_12:
	ld	iy, (_current_context)
	ld	iy, (iy + 3)
	ld	(iy + 1), 1
	ld	de, 135
	ld	hl, (ix + 6)
	add	hl, de
	ld	(hl), 0
BB7_13:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	__Unwind_SjLj_Register
	extern	_memset
	extern	__frameset
	extern	_optix_InitializeWidget
	extern	__indcallhl
	extern	_optix_IntelligentRecursiveSetNeedsRedraw
	extern	_optix_InitializeTextTransform
	extern	_memcpy
	extern	_optix_RecursiveAlign
	extern	__idivs
	extern	__setflag
	extern	_current_context
	extern	__Unwind_SjLj_Unregister
	extern	__iand
	extern	__irems
	extern	__imulu
	extern	_optix_RecursiveSetNeedsRedraw
	extern	_optix_DefaultKeyIsDown
