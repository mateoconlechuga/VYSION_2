	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_optix_GetMenuOptionWidth
_optix_GetMenuOptionWidth:
	ld	hl, -6
	call	__frameset
	ld	iy, (ix + 9)
	ld	l, (iy + 7)
	ld	h, (iy + 8)
	ld	de, 0
	ld	e, l
	ld	d, h
	ld	bc, 140
	add	iy, bc
	ld	bc, (iy)
	push	de
	pop	hl
	call	__idivs
	push	hl
	pop	iy
	ld	hl, (ix + 6)
	inc	hl
	call	__irems
	ld	(ix + -6), hl
	ld	(ix + -3), iy
	lea	hl, iy + 0
	call	__imulu
	push	hl
	pop	bc
	ex	de, hl
	or	a, a
	sbc	hl, bc
	push	hl
	pop	iy
	ld	hl, (ix + -6)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB0_2
	ld	iy, 0
BB0_2:
	ld	de, (ix + -3)
	add	iy, de
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_GetMenuOptionHeight
_optix_GetMenuOptionHeight:
	ld	hl, -12
	call	__frameset
	ld	iy, (ix + 9)
	ld	a, (iy + 9)
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	(ix + -3), hl
	ld	de, 137
	add	iy, de
	ld	bc, (iy)
	ld	(ix + -12), bc
	call	__idivs
	push	hl
	pop	iy
	ld	de, 140
	ld	hl, (ix + 9)
	add	hl, de
	ld	bc, (hl)
	ld	hl, (ix + 6)
	call	__idivs
	ld	(ix + -9), hl
	ld	bc, (ix + -12)
	push	bc
	pop	de
	dec	de
	ld	(ix + -6), iy
	lea	hl, iy + 0
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix + -3)
	or	a, a
	sbc	hl, bc
	push	hl
	pop	bc
	ld	hl, (ix + -9)
	or	a, a
	sbc	hl, de
	jq	z, BB1_2
	ld	bc, 0
BB1_2:
	ld	a, c
	ld	hl, (ix + -6)
	add	a, l
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_GetMenuOptionRelativeX
_optix_GetMenuOptionRelativeX:
	ld	hl, -3
	call	__frameset
	ld	de, (ix + 6)
	ld	iy, (ix + 9)
	ld	bc, 140
	lea	hl, iy + 0
	add	hl, bc
	ld	bc, (hl)
	push	de
	pop	hl
	call	__irems
	ld	(ix + -3), hl
	push	iy
	push	de
	call	_optix_GetMenuOptionWidth
	pop	de
	pop	de
	ld	bc, 0
	ld	c, l
	ld	b, h
	ld	hl, (ix + -3)
	call	__imulu
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_GetMenuOptionRelativeY
_optix_GetMenuOptionRelativeY:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, 134
	push	de
	pop	iy
	add	iy, bc
	ld	bc, (iy)
	or	a, a
	sbc	hl, bc
	ld	bc, 140
	push	de
	pop	iy
	add	iy, bc
	ld	bc, (iy)
	call	__idivs
	ld	(ix + -3), hl
	push	de
	ld	hl, (ix + 6)
	push	hl
	call	_optix_GetMenuOptionHeight
	pop	hl
	pop	hl
	ld	bc, 0
	ld	c, a
	ld	hl, (ix + -3)
	call	__imulu
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_SetMenuOptionTransform
_optix_SetMenuOptionTransform:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 6)
	ld	iy, (ix + 12)
	ld	de, (iy + 1)
	ld	(ix + -3), de
	push	iy
	push	hl
	call	_optix_GetMenuOptionRelativeX
	pop	de
	pop	de
	ld	de, (ix + -3)
	add	hl, de
	ld	iy, (ix + 9)
	ld	(iy + 1), hl
	ld	iy, (ix + 12)
	ld	hl, (iy + 4)
	ld	(ix + -3), hl
	push	iy
	ld	hl, (ix + 6)
	push	hl
	call	_optix_GetMenuOptionRelativeY
	pop	de
	pop	de
	ld	de, (ix + -3)
	add	hl, de
	ld	iy, (ix + 9)
	ld	(iy + 4), hl
	ld	hl, (ix + 12)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_optix_GetMenuOptionWidth
	pop	de
	pop	de
	ld	iy, (ix + 9)
	ld	(iy + 7), l
	ld	(iy + 8), h
	ld	hl, (ix + 12)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_optix_GetMenuOptionHeight
	pop	hl
	pop	hl
	ld	iy, (ix + 9)
	ld	(iy + 9), a
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_UpdateMenu_default
_optix_UpdateMenu_default:
	ld	hl, -26
	call	__frameset
	ld	iy, (ix + 6)
	xor	a, a
	ld	(ix + -6), a
	ld	de, 129
	lea	hl, iy + 0
	add	hl, de
	ld	(ix + -3), hl
	ld	de, (hl)
	ld	bc, -1
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	ld	bc, 146
	jq	z, BB5_2
	ld	iy, (ix + 6)
	add	iy, bc
	ld	(iy), de
	ld	iy, (ix + 6)
BB5_2:
	ld	a, (iy + 15)
	ld	c, 1
	xor	a, c
	bit	0, a
	jq	nz, BB5_7
	ld	iy, (ix + 6)
	ld	hl, (iy + 27)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB5_7
	ld	(ix + -9), hl
	ld	iy, (ix + 6)
	ld	de, 146
	add	iy, de
	ld	hl, (iy)
	ld	bc, 3
	call	__imulu
	ld	c, 1
	push	hl
	pop	de
	ld	hl, (ix + -9)
	add	hl, de
	ld	iy, (hl)
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB5_7
	ld	hl, (iy + 24)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB5_7
	push	iy
	call	__indcallhl
	ld	c, 1
	pop	hl
BB5_7:
	ld	iy, (ix + 6)
	ld	a, (iy + 14)
	xor	a, c
	bit	0, a
	jq	z, BB5_11
	ld	de, 132
	ld	hl, (ix + -3)
	ld	hl, (hl)
	ld	bc, -1
	or	a, a
	sbc	hl, bc
	jq	z, BB5_10
	ld	iy, (ix + 6)
	add	iy, de
	ld	(iy), 1
BB5_10:
	ld	hl, (ix + -3)
	ld	de, -1
	ld	(hl), de
	jq	BB5_93
BB5_11:
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	de, 132
	add	iy, de
	ld	(ix + -9), iy
	ld	(iy), 0
	inc	de
	add	hl, de
	ld	(ix + -12), hl
	ld	a, (hl)
	xor	a, c
	xor	a, c
	bit	0, a
	jq	nz, BB5_13
	ld	iy, (ix + 6)
	ld	de, 146
	add	iy, de
	ld	hl, (iy)
	ld	iy, (ix + -3)
	ld	(iy), hl
	ld	hl, (ix + -9)
	ld	(hl), 1
BB5_13:
	or	a, a
	sbc	hl, hl
	push	hl
	call	_optix_DefaultKeyIsDown
	pop	hl
	and	a, 1
	ld	c, 1
	xor	a, c
	bit	0, a
	jq	z, BB5_15
	or	a, a
	sbc	hl, hl
	push	hl
	call	_optix_DefaultKeyIsDown
	pop	hl
	bit	2, a
	jq	nz, BB5_24
	jq	BB5_25
BB5_15:
	ld	de, 149
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	add	iy, de
	ld	hl, (iy)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB5_20
	ld	iy, (ix + 6)
	ld	iy, (iy + 27)
	ld	hl, (ix + -3)
	ld	hl, (hl)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	iy, (iy)
	ld	a, (iy)
	cp	a, 2
	jq	z, BB5_18
	cp	a, 10
	jq	nz, BB5_24
BB5_18:
	ld	hl, (iy + 30)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB5_24
	ld	de, (iy + 33)
	push	de
	call	__indcallhl
	jq	BB5_23
BB5_20:
	ld	de, (ix + 6)
	push	de
	pop	iy
	ld	de, 155
	add	iy, de
	ld	a, (iy)
	xor	a, c
	bit	0, a
	ld	de, (ix + 6)
	jq	z, BB5_22
	ld	de, 152
	ld	iy, (ix + 6)
	add	iy, de
	ld	de, (iy)
BB5_22:
	push	de
	call	__indcallhl
	pop	hl
	ld	hl, 2
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_optix_SetDefaultKeyState
	pop	hl
BB5_23:
	pop	hl
BB5_24:
	ld	iy, (ix + 6)
	ld	(iy + 17), 1
BB5_25:
	ld	iy, (_current_context)
	ld	hl, (iy)
	ld	a, (hl)
	ld	c, 1
	ld	l, c
	xor	a, l
	bit	0, a
	jq	z, BB5_30
	ld	iy, (iy + 9)
	ld	hl, (iy + 54)
	ld	iy, (ix + 6)
	lea	de, iy + 0
	or	a, a
	sbc	hl, de
	jq	nz, BB5_81
	ld	hl, 1
	push	hl
	call	_optix_DefaultKeyIsDown
	pop	hl
	and	a, 1
	ld	l, 1
	xor	a, l
	bit	0, a
	ld	a, 0
	ld	c, a
	jq	nz, BB5_55
	ld	hl, (ix + -3)
	ld	hl, (hl)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB5_50
	ld	c, 0
	jq	BB5_51
BB5_30:
	ld	hl, (ix + 6)
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_optix_GetMenuOptionWidth
	ld	(ix + -17), l
	ld	(ix + -16), h
	pop	hl
	pop	hl
	ld	hl, (ix + 6)
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_optix_GetMenuOptionHeight
	ld	(ix + -20), a
	pop	hl
	pop	hl
	ld	hl, 5
	push	hl
	call	_optix_DefaultKeyIsDown
	pop	hl
	and	a, 1
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	z, BB5_33
	ld	hl, 6
	push	hl
	call	_optix_DefaultKeyIsDown
	pop	hl
	and	a, 1
	ld	l, 1
	xor	a, l
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	de, 134
	add	hl, de
	ld	(ix + -6), hl
	ld	hl, (hl)
	ld	(ix + -15), hl
	ld	de, 140
	add	iy, de
	ld	de, (iy)
	bit	0, a
	jq	z, BB5_36
	ld	(ix + -6), de
	ld	hl, (ix + 6)
	ex	de, hl
	ld	a, (ix + -20)
	jq	BB5_41
BB5_33:
	ld	hl, (ix + 6)
	ld	de, 134
	add	hl, de
	ld	(ix + -15), hl
	ld	bc, (hl)
	ld	iy, (ix + 6)
	ld	de, 140
	add	iy, de
	ld	hl, (iy)
	ld	(ix + -6), hl
	ld	(ix + -26), bc
	add	hl, bc
	ld	(ix + -23), hl
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	de, 143
	add	iy, de
	ld	de, (iy)
	push	hl
	pop	iy
	ld	bc, 137
	add	iy, bc
	ld	hl, (iy)
	dec	hl
	ld	bc, (ix + -6)
	call	__imulu
	push	hl
	pop	bc
	ex	de, hl
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
	ld	bc, (ix + -23)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	m, BB5_35
	ld	bc, (ix + -26)
BB5_35:
	ld	hl, (ix + -15)
	ld	(hl), bc
	jq	BB5_39
BB5_36:
	ld	iy, (ix + -6)
	ld	hl, (ix + -15)
	or	a, a
	sbc	hl, de
	ld	(ix + -15), de
	push	hl
	pop	de
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	push	de
	pop	bc
	call	__setflag
	jq	p, BB5_38
	ld	bc, 0
BB5_38:
	ld	(iy), bc
	ld	hl, (ix + -15)
	ld	(ix + -6), hl
BB5_39:
	ld	iy, (ix + 6)
	ld	a, (ix + -20)
	ld	(iy + 17), 1
	ld	(ix + -15), bc
	lea	de, iy + 0
BB5_41:
	ld	iy, (_current_context)
	ld	iy, (iy + 9)
	ld	(ix + -20), iy
	ld	hl, (iy + 4)
	push	de
	pop	iy
	ld	de, (iy + 4)
	or	a, a
	sbc	hl, de
	ld	de, 0
	ld	e, a
	push	de
	pop	bc
	call	__idivs
	push	hl
	pop	bc
	ld	hl, (ix + -6)
	call	__imulu
	ld	(ix + -6), hl
	ld	iy, (ix + -20)
	ld	hl, (iy + 1)
	ld	iy, (ix + 6)
	ld	bc, (iy + 1)
	or	a, a
	sbc	hl, bc
	ld	c, (ix + -17)
	ld	b, (ix + -16)
	ld	e, c
	ld	d, b
	push	de
	pop	bc
	call	__idivs
	push	hl
	pop	de
	ld	bc, (ix + -15)
	ld	hl, (ix + -6)
	add	hl, bc
	add	hl, de
	ld	de, 143
	add	iy, de
	ld	de, (iy)
	push	hl
	pop	iy
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB5_45
	ld	hl, (ix + -3)
	ld	hl, (hl)
	ld	bc, -1
	or	a, a
	sbc	hl, bc
	jq	nz, BB5_61
	ld	hl, (ix + -12)
	ld	a, (hl)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB5_61
	ld	hl, (ix + -9)
	ld	(hl), 1
	jq	BB5_61
BB5_45:
	ld	hl, (ix + -12)
	ld	a, (hl)
	ld	l, 1
	xor	a, l
	bit	0, a
	ld	bc, -1
	jq	nz, BB5_60
	ld	hl, (ix + -3)
	ld	hl, (hl)
	or	a, a
	sbc	hl, bc
	jq	z, BB5_60
	ld	hl, (ix + -9)
	ld	(hl), 1
BB5_60:
	ld	iy, -1
BB5_61:
	ld	hl, (ix + -3)
	ld	(hl), iy
	jq	BB5_82
BB5_50:
	ld	c, 1
BB5_51:
	ld	de, 0
	bit	0, c
	jq	nz, BB5_54
	ld	iy, (ix + 6)
	ld	de, 140
	add	iy, de
	ld	de, (iy)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
BB5_54:
	ld	hl, (ix + -3)
	ld	(hl), de
	ld	a, 1
	ld	(ix + -6), a
BB5_55:
	ld	(ix + -9), c
	ld	hl, 2
	push	hl
	call	_optix_DefaultKeyIsDown
	pop	hl
	and	a, 1
	ld	l, 1
	xor	a, l
	ld	hl, 3
	bit	0, a
	jq	nz, BB5_68
	ld	hl, (ix + -3)
	ld	de, (hl)
	ld	iy, (ix + 6)
	ld	bc, 143
	add	iy, bc
	ld	bc, (iy)
	dec	bc
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	z, BB5_62
	ld	a, 0
	jq	BB5_63
BB5_62:
	ld	a, 1
BB5_63:
	ld	iy, (ix + 6)
	bit	0, a
	ld	(ix + -9), a
	jq	z, BB5_66
	push	de
	pop	iy
	jq	BB5_67
BB5_66:
	ld	bc, 140
	add	iy, bc
	ld	iy, (iy)
	add	iy, de
BB5_67:
	ld	hl, (ix + -3)
	ld	(hl), iy
	ld	a, 1
	ld	(ix + -6), a
	ld	hl, 3
BB5_68:
	push	hl
	call	_optix_DefaultKeyIsDown
	pop	hl
	and	a, 1
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB5_72
	ld	hl, (ix + -3)
	ld	de, (hl)
	ld	iy, (ix + 6)
	ld	bc, 140
	add	iy, bc
	ld	bc, (iy)
	push	de
	pop	hl
	call	__irems
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	a, 1
	ld	(ix + -9), a
	jq	z, BB5_72
	dec	de
	ld	hl, (ix + -3)
	ld	(hl), de
	xor	a, a
	ld	(ix + -9), a
	ld	a, 1
	ld	(ix + -6), a
BB5_72:
	ld	hl, 4
	push	hl
	call	_optix_DefaultKeyIsDown
	pop	hl
	and	a, 1
	ld	c, 1
	xor	a, c
	bit	0, a
	ld	b, (ix + -9)
	jq	nz, BB5_74
	ld	hl, (ix + -3)
	ld	de, (hl)
	inc	de
	ld	iy, (ix + 6)
	ld	bc, 140
	add	iy, bc
	ld	bc, (iy)
	push	de
	pop	hl
	call	__irems
	ld	c, 1
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	b, 1
	jq	nz, BB5_75
BB5_74:
	ld	a, (ix + -6)
	xor	a, c
	bit	0, a
	jq	z, BB5_76
	jq	BB5_79
BB5_75:
	ld	hl, (ix + -3)
	ld	(hl), de
	xor	a, a
	ld	b, a
BB5_76:
	ld	de, 156
	ld	iy, (ix + 6)
	add	iy, de
	ld	a, (iy)
	xor	a, c
	bit	0, a
	jq	nz, BB5_79
	ld	de, 157
	ld	iy, (ix + 6)
	add	iy, de
	ld	a, (iy)
	xor	a, c
	xor	a, c
	bit	0, a
	jq	nz, BB5_79
	ld	iy, (_current_context)
	ld	hl, (iy + 15)
	ld	de, (ix + 6)
	push	de
	push	hl
	ld	(ix + -9), b
	call	_optix_IntelligentRecursiveSetNeedsRedraw
	pop	hl
	pop	hl
	bit	0, (ix + -9)
	jq	nz, BB5_81
	jq	BB5_80
BB5_79:
	bit	0, b
	jq	nz, BB5_81
BB5_80:
	ld	iy, (_current_context)
	ld	iy, (iy + 9)
	ld	hl, 4
	ld	(iy + 51), hl
BB5_81:
	ld	hl, (ix + -3)
	ld	iy, (hl)
	ld	bc, -1
BB5_82:
	lea	hl, iy + 0
	or	a, a
	sbc	hl, bc
	lea	bc, iy + 0
	jq	z, BB5_93
	ld	de, 0
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB5_85
	ld	hl, (ix + -3)
	ld	bc, 0
	ld	(hl), bc
BB5_85:
	ld	iy, (ix + 6)
	ld	de, 143
	add	iy, de
	ld	de, (iy)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	m, BB5_87
	dec	de
	ld	hl, (ix + -3)
	ld	(hl), de
	push	de
	pop	bc
BB5_87:
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	de, 134
	add	iy, de
	ld	hl, (iy)
	ld	(ix + -3), hl
	push	bc
	pop	hl
	ld	de, -1
	or	a, a
	sbc	hl, de
	ld	(ix + -6), iy
	jq	z, BB5_89
	push	bc
	pop	hl
	ld	de, (ix + -3)
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	m, BB5_91
BB5_89:
	ld	iy, (ix + 6)
	ld	(ix + -9), bc
	ld	de, 137
	add	iy, de
	ld	hl, (iy)
	dec	hl
	ld	iy, (ix + 6)
	ld	bc, 140
	add	iy, bc
	ld	bc, (iy)
	push	hl
	pop	iy
	call	__imulu
	ld	de, (ix + -3)
	add	hl, de
	ld	de, (ix + -9)
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB5_93
	ex	de, hl
	call	__idivs
	lea	de, iy + 0
	or	a, a
	sbc	hl, de
	call	__imulu
	jq	BB5_92
BB5_91:
	ld	iy, (ix + 6)
	push	bc
	pop	hl
	ld	de, 140
	add	iy, de
	ld	bc, (iy)
	push	hl
	pop	de
	call	__irems
	push	hl
	pop	bc
	ex	de, hl
	or	a, a
	sbc	hl, bc
BB5_92:
	ld	iy, (ix + -6)
	ld	(iy), hl
	ld	iy, (ix + 6)
	ld	(iy + 17), 1
BB5_93:
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	a, (iy + 14)
	ld	de, 133
	add	iy, de
	ld	(iy), a
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_RenderMenuOption
_optix_RenderMenuOption:
	ld	hl, -157
	call	__frameset
	ld	hl, 0
	lea	de, ix + -49
	lea	bc, ix + -86
	lea	iy, ix + -98
	ld	(ix + -3), bc
	push	ix
	ld	bc, -145
	add	ix, bc
	ld	(ix + 0), iy
	pop	ix
	ld	bc, -139
	lea	iy, ix + 0
	add	iy, bc
	push	ix
	ld	bc, -142
	add	ix, bc
	ld	(ix + 0), iy
	pop	ix
	push	ix
	ld	bc, -148
	add	ix, bc
	ld	(ix + 0), de
	pop	ix
	ld	(ix + -98), de
	ld	bc, (ix + -3)
	push	ix
	ld	de, -151
	add	ix, de
	ld	(ix + 0), bc
	pop	ix
	ld	(ix + -95), bc
	ld	(ix + -92), hl
	ld	(ix + -89), hl
	ld	hl, 41
	push	hl
	or	a, a
	sbc	hl, hl
	push	ix
	ld	bc, -154
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	push	hl
	push	iy
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -145
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(ix + -112), hl
	ld	hl, 2
	push	hl
	ld	bc, -142
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	ld	bc, (ix + 6)
	ld	iy, (ix + 9)
	pop	hl
	pop	hl
	ld	a, (iy + 17)
	ld	l, 1
	xor	a, l
	ld	de, 129
	add	iy, de
	push	ix
	ld	de, -157
	add	ix, de
	ld	(ix + 0), iy
	pop	ix
	ld	de, (iy)
	xor	a, l
	ld	(ix + -3), bc
	ld	bc, -145
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	bit	0, a
	ld	bc, (ix + -3)
	jq	nz, BB6_4
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	nz, BB6_3
	ld	bc, -145
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(ix + -112), hl
	jq	BB6_5
BB6_3:
	ld	bc, 146
	ld	iy, (ix + 9)
	add	iy, bc
	ld	bc, (ix + 6)
	ld	hl, (iy)
	or	a, a
	sbc	hl, bc
	ld	(ix + -3), bc
	ld	bc, -145
	lea	hl, ix + 0
	push	af
	add	hl, bc
	pop	af
	ld	hl, (hl)
	ld	bc, (ix + -3)
	jq	nz, BB6_44
BB6_4:
	ld	(ix + -112), hl
	ex	de, hl
	or	a, a
	sbc	hl, bc
	ld	a, 0
	ld	iy, (ix + 9)
	jq	nz, BB6_6
BB6_5:
	or	a, a
	sbc	hl, hl
	push	hl
	call	_optix_DefaultKeyIsDown
	ld	bc, (ix + 6)
	ld	iy, (ix + 9)
	pop	hl
	srl	a
	and	a, 1
BB6_6:
	ld	(ix + -103), a
	ld	de, 156
	add	iy, de
	ld	a, (iy)
	ld	l, 1
	xor	a, l
	xor	a, l
	bit	0, a
	jq	nz, BB6_7
	ld	de, -157
	lea	hl, ix + 0
	add	hl, de
	ld	hl, (hl)
	ld	hl, (hl)
	or	a, a
	sbc	hl, bc
	ld	a, 0
	jq	nz, BB6_10
	ld	iy, (ix + 9)
	ld	de, 157
	add	iy, de
	ld	a, (iy)
	jq	BB6_10
BB6_7:
	ld	a, 1
BB6_10:
	ld	de, (ix + 15)
	ld	(ix + -101), a
	ld	iy, (ix + -112)
	ld	hl, (ix + 12)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB6_13
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB6_13
	ld	hl, 43
	push	hl
	ld	iy, (ix + 9)
	pea	iy + 42
	ld	bc, -148
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + 12)
	ld	(ix + -17), hl
	ld	bc, -148
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeTextTransform
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -148
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	ld	de, (ix + 15)
	ld	bc, (ix + 6)
	pop	hl
	pop	hl
	ld	iy, (ix + -112)
	jq	BB6_14
BB6_13:
	ld	hl, 0
	ld	(ix + -17), hl
BB6_14:
	ex	de, hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB6_17
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB6_17
	ld	hl, 37
	push	hl
	ld	iy, (ix + 9)
	pea	iy + 85
	ld	bc, -151
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + 15)
	ld	(ix + -56), hl
	ld	hl, 1
	push	hl
	ld	bc, -151
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_InitializeWidget
	ld	bc, (ix + 6)
	pop	hl
	pop	hl
	ld	iy, (ix + -112)
	jq	BB6_18
BB6_17:
	ld	hl, 0
	ld	(ix + -56), hl
BB6_18:
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB6_20
	lea	de, iy + 0
	ld	iy, (ix + 9)
	ld	hl, (iy + 27)
	push	de
	pop	iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB6_41
BB6_20:
	ld	bc, -148
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	ld	(iy), hl
	ld	iy, (ix + -112)
	ld	hl, (ix + -17)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB6_21
	ld	a, 0
	jq	BB6_23
BB6_21:
	ld	a, 1
BB6_23:
	and	a, 1
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	push	ix
	ld	de, -151
	add	ix, de
	ld	hl, (ix + 0)
	pop	ix
	ld	(iy), hl
	ld	de, 143
	ld	iy, (ix + 9)
	add	iy, de
	ld	de, (iy)
	ld	hl, (ix + 6)
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB6_31
	ld	iy, (ix + 9)
	ld	iy, (iy + 27)
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB6_31
	ld	bc, 3
	ld	hl, (ix + 6)
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, (iy)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB6_31
	ld	de, -145
	lea	iy, ix + 0
	add	iy, de
	ld	(iy + 0), hl
	ld	hl, (ix + -17)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	c, 1
	ld	b, 0
	ld	a, c
	jq	nz, BB6_28
	ld	a, b
BB6_28:
	ld	iy, (ix + -112)
	and	a, 1
	ld	de, 0
	ld	e, a
	ld	hl, (ix + -56)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB6_30
	ld	c, b
BB6_30:
	ld	a, c
	and	a, 1
	or	a, a
	sbc	hl, hl
	ld	l, a
	add	hl, de
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	push	ix
	ld	de, -145
	add	ix, de
	ld	hl, (ix + 0)
	pop	ix
	ld	(iy), hl
BB6_31:
	ld	hl, (ix + -17)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	e, 1
	ld	d, 0
	ld	a, e
	jq	nz, BB6_33
	ld	a, d
BB6_33:
	and	a, 1
	ld	iy, 0
	lea	bc, iy + 0
	ld	c, a
	ld	hl, (ix + -56)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB6_35
	ld	e, d
BB6_35:
	ld	hl, (ix + -112)
	ld	(ix + -3), bc
	push	ix
	ld	bc, -148
	add	ix, bc
	ld	(ix + 0), hl
	pop	ix
	ld	a, e
	and	a, 1
	ld	iyl, a
	ld	bc, (ix + -3)
	add	iy, bc
	ld	bc, -145
	lea	hl, ix + 0
	add	hl, bc
	ld	(hl), iy
	ld	iy, (ix + 9)
	ld	iy, (iy + 27)
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB6_40
	ld	bc, 3
	ld	hl, (ix + 6)
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, (iy)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB6_37
	ld	a, 0
	jq	BB6_39
BB6_37:
	ld	a, 1
BB6_39:
	and	a, 1
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	bc, -154
	lea	iy, ix + 0
	add	iy, bc
	ld	(iy + 0), hl
BB6_40:
	ld	bc, -154
	lea	hl, ix + 0
	add	hl, bc
	ld	de, (hl)
	ld	bc, -145
	lea	iy, ix + 0
	add	iy, bc
	ld	hl, (iy + 0)
	add	hl, de
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	(ix + -3), bc
	push	ix
	ld	bc, -148
	add	ix, bc
	ld	iy, (ix + 0)
	pop	ix
	add	iy, de
	ld	hl, 0
	ld	(iy), hl
	ld	bc, (ix + -3)
	ld	bc, (ix + 6)
BB6_41:
	ld	hl, (ix + 9)
	push	hl
	ld	de, -142
	lea	hl, ix + 0
	add	hl, de
	ld	hl, (hl)
	push	hl
	push	bc
	call	_optix_SetMenuOptionTransform
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -142
	lea	hl, ix + 0
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_optix_RecursiveAlign
	pop	hl
	ld	iy, (ix + 9)
	lea	bc, iy + 0
	ld	de, 129
	add	iy, de
	ld	hl, (iy)
	ld	de, (ix + 6)
	or	a, a
	sbc	hl, de
	ld	a, 0
	jq	nz, BB6_43
	ld	de, 157
	push	bc
	pop	hl
	add	hl, de
	ld	a, (hl)
	xor	a, 1
BB6_43:
	ld	(ix + -125), a
	ld	hl, (ix + -112)
	push	hl
	call	_optix_RecursiveSetNeedsRedraw
	pop	hl
	ld	hl, (ix + -118)
	ld	bc, -142
	lea	iy, ix + 0
	add	iy, bc
	ld	de, (iy + 0)
	push	de
	call	__indcallhl
	pop	hl
BB6_44:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_RenderMenu_default
_optix_RenderMenu_default:
	ld	hl, -18
	call	__frameset
	ld	iy, (ix + 6)
	ld	a, (iy + 17)
	ld	l, 1
	xor	a, l
	xor	a, l
	bit	0, a
	jq	nz, BB7_5
	ld	de, 129
	ld	iy, (ix + 6)
	add	iy, de
	ld	de, (iy)
	ld	bc, 146
	ld	iy, (ix + 6)
	add	iy, bc
	ld	bc, (iy)
	ld	iy, (ix + 6)
	ld	a, l
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	ld	l, a
	jq	z, BB7_4
	ld	bc, -1
	ex	de, hl
	or	a, a
	sbc	hl, bc
	ld	l, a
	jq	z, BB7_4
	ld	a, (iy + 14)
	xor	a, l
	xor	a, l
	bit	0, a
	jq	nz, BB7_5
BB7_4:
	ld	iy, (ix + 6)
	ld	de, 132
	add	iy, de
	ld	a, (iy)
	ld	iy, (ix + 6)
	xor	a, l
	bit	0, a
	jq	nz, BB7_14
BB7_5:
	ld	bc, 3
	ld	de, 134
	lea	hl, iy + 0
	add	hl, de
	ld	(ix + -12), hl
	ld	iy, (hl)
	lea	hl, iy + 0
	call	__imulu
	ld	(ix + -9), hl
	ld	bc, 137
	ld	hl, (ix + 6)
	add	hl, bc
	ld	de, 140
	ld	(ix + -6), iy
	ld	(ix + -3), iy
	ld	iy, (ix + 6)
	ld	(ix + -15), hl
BB7_6:
	ld	bc, (hl)
	add	iy, de
	ld	hl, (iy)
	call	__imulu
	ld	de, (ix + -6)
	add	hl, de
	ex	de, hl
	ld	hl, (ix + -3)
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB7_13
	ld	iy, (ix + 6)
	ld	hl, (iy + 123)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	bc, 0
	push	bc
	pop	de
	jq	z, BB7_9
	ld	de, (ix + -9)
	add	hl, de
	ld	de, (hl)
BB7_9:
	ld	(ix + -6), de
	ld	hl, (iy + 126)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB7_11
	ld	bc, (ix + -9)
	add	hl, bc
	ld	bc, (hl)
BB7_11:
	ld	(ix + -18), bc
	ld	de, 143
	add	iy, de
	ld	de, (iy)
	ld	bc, (ix + -3)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB7_13
	ld	hl, (ix + -18)
	push	hl
	ld	hl, (ix + -6)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	push	bc
	ld	(ix + -3), bc
	call	_optix_RenderMenuOption
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + -3)
	inc	hl
	ld	(ix + -3), hl
	ld	hl, (ix + -12)
	ld	hl, (hl)
	ld	(ix + -6), hl
	ld	bc, 3
	ld	hl, (ix + -9)
	add	hl, bc
	ld	(ix + -9), hl
	ld	iy, (ix + 6)
	ld	hl, (ix + -15)
	ld	de, 140
	jq	BB7_6
BB7_13:
	ld	iy, (_current_context)
	ld	iy, (iy + 3)
	ld	(iy + 1), 1
	ld	de, 132
	ld	hl, (ix + 6)
	add	hl, de
	ld	(hl), 0
BB7_14:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	_memset
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	__indcallhl
	extern	_optix_InitializeWidget
	extern	_optix_IntelligentRecursiveSetNeedsRedraw
	extern	_optix_InitializeTextTransform
	extern	_memcpy
	extern	_optix_RecursiveAlign
	extern	__idivs
	extern	__setflag
	extern	_current_context
	extern	__Unwind_SjLj_Unregister
	extern	__irems
	extern	__imulu
	extern	_optix_RecursiveSetNeedsRedraw
	extern	_optix_SetDefaultKeyState
	extern	_optix_DefaultKeyIsDown
