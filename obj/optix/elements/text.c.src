	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_optix_InitializeTextTransform
_optix_InitializeTextTransform:
	call	__frameset0
	ld	iy, (ix + 6)
	or	a, a
	sbc	hl, hl
	ld	(iy + 1), hl
	ld	(iy + 4), hl
	lea	de, iy + 0
	ld	iy, (_current_context)
	ld	iy, (iy + 3)
	ld	a, (iy + 2)
	inc	l
	xor	a, l
	push	de
	pop	iy
	ld	hl, (iy + 32)
	bit	0, a
	jq	z, BB0_1
	push	hl
	call	_gfx_GetStringWidth
	ld	a, 8
	pop	de
	ld	iy, (ix + 6)
	ld	(iy + 7), l
	ld	(iy + 8), h
	jq	BB0_3
BB0_1:
	push	hl
	call	_fontlib_GetStringWidth
	pop	de
	ld	iy, (ix + 6)
	ld	(iy + 7), l
	ld	(iy + 8), h
	call	_fontlib_GetCurrentFontHeight
BB0_3:
	ld	iy, (ix + 6)
	ld	(iy + 9), a
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_GetStringWidthL
_optix_GetStringWidthL:
	ld	hl, -4
	call	__frameset
	ld	de, (ix + 9)
	ld	iy, (_current_context)
	ld	iy, (iy + 3)
	ld	a, (iy + 2)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	z, BB1_4
	ld	hl, (ix + 6)
	push	hl
	call	_strlen
	pop	de
	ld	de, (ix + 9)
	or	a, a
	sbc	hl, de
	jq	nc, BB1_5
	ld	hl, (ix + 6)
	push	hl
	call	_gfx_GetStringWidth
	jq	BB1_3
BB1_4:
	push	de
	ld	hl, (ix + 6)
	push	hl
	call	_fontlib_GetStringWidthL
	pop	de
BB1_3:
	pop	de
	jq	BB1_6
BB1_5:
	inc	de
	ld	hl, (ix + 6)
	push	hl
	pop	bc
	add	hl, de
	ld	(ix + -4), hl
	ld	a, (hl)
	ld	(ix + -1), a
	ld	(hl), 0
	push	bc
	call	_gfx_GetStringWidth
	pop	de
	ld	a, (ix + -1)
	ld	iy, (ix + -4)
	ld	(iy), a
BB1_6:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_GetStringWidth
_optix_GetStringWidth:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	iy, (_current_context)
	ld	iy, (iy + 3)
	ld	a, (iy + 2)
	ld	e, 1
	xor	a, e
	bit	0, a
	jq	z, BB2_2
	push	hl
	call	_gfx_GetStringWidth
	jq	BB2_3
BB2_2:
	push	hl
	call	_fontlib_GetStringWidth
BB2_3:
	pop	de
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_DrawStringL
_optix_DrawStringL:
	ld	hl, -7
	call	__frameset
	ld	bc, (ix + 6)
	ld	de, (ix + 9)
	ld	iy, (_current_context)
	ld	iy, (iy + 3)
	ld	a, (iy + 2)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	z, BB3_1
	inc	de
	push	bc
	pop	hl
	add	hl, de
	ld	(ix + -4), hl
	ld	a, (hl)
	ld	(ix + -1), a
	ld	(hl), 0
	call	_fontlib_GetCursorX
	ld	(ix + -7), hl
	call	_fontlib_GetCursorY
	or	a, a
	sbc	hl, hl
	ld	l, a
	push	hl
	ld	hl, (ix + -7)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	a, (ix + -1)
	ld	hl, (ix + -4)
	ld	(hl), a
	jq	BB3_3
BB3_1:
	push	de
	push	bc
	call	_fontlib_DrawStringL
	pop	hl
	pop	hl
BB3_3:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_PrintStringWrapped_fontlibc
_optix_PrintStringWrapped_fontlibc:
	ld	hl, -25
	call	__frameset
	call	_fontlib_GetAlternateStopCode
	ld	l, a
	ld	(ix + -19), hl
	call	_fontlib_GetWindowXMin
	ld	(ix + -16), hl
	call	_fontlib_GetWindowWidth
	ld	(ix + -25), hl
	ld	de, (ix + -16)
	add	hl, de
	ld	(ix + -6), hl
	call	_fontlib_GetCursorX
	ld	(ix + -3), hl
	call	_fontlib_GetFirstPrintableCodePoint
	ld	(ix + -9), a
	ld	hl, 32
	push	hl
	call	_fontlib_GetGlyphWidth
	ld	c, (ix + -9)
	ld	l, a
	pop	de
	ld	de, 0
	ld	a, c
	or	a, a
	ld	a, 1
	ld	(ix + -13), a
	jq	z, BB4_2
	ld	(ix + -13), c
BB4_2:
	ld	bc, (ix + -6)
	ld	(ix + -12), bc
	ld	e, l
	ld	(ix + -22), de
	ld	hl, 32
	push	hl
	call	_fontlib_SetAlternateStopCode
	ld	iy, (ix + 6)
	pop	hl
	ld	hl, (ix + -3)
BB4_3:
	ld	(ix + -3), hl
	ld	(ix + -6), iy
	push	iy
	call	_fontlib_GetStringWidth
	push	hl
	pop	iy
	pop	hl
	lea	hl, iy + 0
	ld	bc, (ix + -3)
	add	hl, bc
	ld	(ix + -9), hl
	ld	de, (ix + -12)
	or	a, a
	sbc	hl, de
	push	bc
	pop	de
	jq	nc, BB4_6
	bit	0, (ix + 9)
	jq	nz, BB4_8
	ld	hl, (ix + -6)
	push	hl
BB4_19:
	call	_fontlib_DrawString
	ld	(ix + -9), hl
	pop	hl
	jq	BB4_8
BB4_6:
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB4_15
	ld	(ix + -9), de
BB4_8:
	call	_fontlib_GetLastCharacterRead
	push	hl
	pop	iy
	ld	a, (iy)
	ld	l, (ix + -13)
	cp	a, l
	lea	hl, iy + 0
	inc	hl
	ld	(ix + -6), hl
	jq	nc, BB4_11
	cp	a, 6
	ld	hl, (ix + -9)
	jq	nz, BB4_20
	ld	iy, (ix + -6)
	jq	BB4_3
BB4_11:
	cp	a, 32
	ld	hl, (ix + -9)
	push	hl
	pop	bc
	jq	nz, BB4_3
	ld	de, (ix + -22)
	push	bc
	pop	hl
	add	hl, de
	push	hl
	pop	bc
	ld	de, (ix + -12)
	or	a, a
	sbc	hl, de
	jq	nc, BB4_23
	bit	0, (ix + 9)
	push	bc
	pop	hl
	ld	iy, (ix + -6)
	jq	nz, BB4_3
	ld	(ix + -9), bc
	ld	hl, 32
	push	hl
	call	_fontlib_DrawGlyph
	pop	hl
	ld	hl, (ix + -9)
	ld	iy, (ix + -6)
	jq	BB4_3
BB4_15:
	ex	de, hl
	ld	de, (ix + -16)
	or	a, a
	sbc	hl, de
	jq	nz, BB4_25
	lea	hl, iy + 0
	ld	de, (ix + -25)
	or	a, a
	sbc	hl, de
	jq	c, BB4_25
	ld	a, (ix + 9)
	ld	l, 1
	xor	a, l
	bit	0, a
	ld	iy, (ix + -6)
	jq	z, BB4_27
	push	iy
	jq	BB4_19
BB4_20:
	cp	a, 9
	jq	nz, BB4_29
	ld	de, 16
	add	hl, de
	ld	bc, -16
	call	__iand
	bit	0, (ix + 9)
	ld	iy, (ix + -6)
	jq	nz, BB4_3
	ld	(ix + -3), hl
	call	_fontlib_ClearEOL
	call	_fontlib_GetCursorY
	ld	l, a
	push	hl
	ld	hl, (ix + -3)
	push	hl
	call	_fontlib_SetCursorPosition
	ld	hl, (ix + -3)
	pop	de
	pop	de
	ld	iy, (ix + -6)
	jq	BB4_3
BB4_23:
	ld	a, (iy + 1)
	cp	a, 32
	jq	z, BB4_26
BB4_25:
	ld	iy, (ix + -6)
BB4_29:
	ld	(ix + -6), iy
	bit	0, (ix + 9)
	call	z, _fontlib_ClearEOL
	ld	hl, (ix + -19)
	push	hl
	call	_fontlib_SetAlternateStopCode
	pop	hl
	ld	hl, (ix + -6)
	ld	sp, ix
	pop	ix
	ret
BB4_26:
	lea	iy, iy + 2
	jq	BB4_29
BB4_27:
	dec	iy
	ld	hl, (ix + -16)
	ld	(ix + -3), hl
BB4_28:
	ld	a, (iy + 1)
	inc	iy
	ld	(ix + -6), iy
	ld	l, a
	push	hl
	call	_fontlib_GetGlyphWidth
	ld	iy, (ix + -6)
	pop	hl
	ld	de, 0
	ld	e, a
	ld	hl, (ix + -3)
	add	hl, de
	ld	(ix + -3), hl
	ld	de, (ix + -12)
	or	a, a
	sbc	hl, de
	jq	c, BB4_28
	jq	BB4_29
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_UpdateText_default
_optix_UpdateText_default:
	ld	hl, -7
	call	__frameset
	ld	de, (ix + 6)
	ld	iy, (_current_context)
	lea	bc, iy + 0
	ld	iy, (iy + 9)
	ld	(ix + -3), iy
	ld	hl, (iy + 54)
	or	a, a
	sbc	hl, de
	ld	e, 1
	jq	nz, BB5_2
	push	bc
	pop	hl
	jq	BB5_5
BB5_2:
	push	bc
	pop	hl
	ld	hl, (hl)
	ld	a, (hl)
	xor	a, e
	bit	0, a
	jq	nz, BB5_24
	ld	hl, (ix + 6)
	push	hl
	ld	hl, (ix + -3)
	push	hl
	call	_optix_CheckTransformOverlap
	pop	de
	pop	de
	ld	e, 1
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB5_24
	ld	hl, (_current_context)
BB5_5:
	ld	c, 10
	ld	iy, (ix + 6)
	ld	b, (iy + 9)
	call	__bdivu
	ld	(ix + -4), a
	ld	hl, (hl)
	ld	a, (hl)
	xor	a, e
	bit	0, a
	jq	nz, BB5_7
	ld	hl, 6
	jq	BB5_8
BB5_7:
	ld	hl, 1
BB5_8:
	ld	iy, (ix + 6)
	ld	de, (iy + 38)
	ld	(ix + -7), de
	push	hl
	call	_optix_DefaultKeyIsDown
	pop	hl
	and	a, 1
	ld	(ix + -3), a
	ld	hl, (_current_context)
	ld	hl, (hl)
	ld	a, (hl)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB5_10
	ld	hl, 5
	jq	BB5_11
BB5_10:
	ld	hl, 2
BB5_11:
	push	hl
	call	_optix_DefaultKeyIsDown
	pop	hl
	and	a, 1
	ld	e, 1
	xor	a, e
	bit	0, a
	jq	nz, BB5_19
	ld	bc, 0
	push	bc
	pop	de
	ld	a, (ix + -4)
	ld	e, a
	push	de
	pop	hl
	ld	bc, (ix + -7)
	push	bc
	pop	iy
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	m, BB5_14
	lea	de, iy + 0
BB5_14:
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	bc, (iy + 35)
	ld	hl, (iy + 38)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	push	bc
	pop	iy
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	m, BB5_16
	ld	a, 0
	jq	BB5_17
BB5_16:
	ld	a, 1
BB5_17:
	ld	e, 1
	and	a, 1
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
	ld	c, a
	add	iy, bc
	lea	bc, iy + 0
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	(iy + 35), bc
	ld	(iy + 17), 1
BB5_19:
	ld	a, (ix + -3)
	xor	a, e
	bit	0, a
	jq	nz, BB5_24
	ld	iy, (ix + 6)
	ld	de, (iy + 35)
	ld	bc, 1
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB5_22
	ld	de, 0
	jq	BB5_23
BB5_22:
	dec	de
BB5_23:
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	(iy + 35), de
	ld	(iy + 17), 1
BB5_24:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_RenderText_default
_optix_RenderText_default:
	ld	hl, -24
	call	__frameset
	ld	iy, (ix + 6)
	ld	a, (iy + 15)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB6_16
	ld	a, (iy + 17)
	xor	a, l
	bit	0, a
	jq	nz, BB6_16
	ld	iy, (_current_context)
	ld	iy, (iy + 3)
	ld	a, (iy + 2)
	xor	a, l
	bit	0, a
	jq	z, BB6_3
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	hl, (iy + 32)
	ld	de, (iy + 1)
	ld	bc, (iy + 4)
	push	bc
	push	de
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
BB6_16:
	ld	sp, ix
	pop	ix
	ret
BB6_3:
	ld	c, 10
	ld	iy, (ix + 6)
	ld	b, (iy + 9)
	ld	(ix + -3), b
	call	__bdivu
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	de, (iy + 38)
	ld	(ix + -9), hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	m, BB6_5
	ld	(ix + -9), de
BB6_5:
	ld	hl, (iy + 32)
	ld	(ix + -6), hl
	ld	iy, (ix + 6)
	ld	bc, (iy + 1)
	ld	iy, (ix + 6)
	ld	a, (iy + 4)
	ld	iy, (ix + 6)
	ld	e, (iy + 7)
	ld	d, (iy + 8)
	or	a, a
	sbc	hl, hl
	ld	l, e
	ld	h, d
	ld	e, (ix + -3)
	push	de
	push	hl
	ld	l, a
	push	hl
	push	bc
	call	_fontlib_SetWindow
	ld	iy, (ix + 6)
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	a, (iy + 42)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB6_7
	ld	iy, (ix + 6)
	ld	l, (iy + 1)
	ld	h, (iy + 2)
	ld	(ix + -3), hl
	ld	iy, (ix + 6)
	ld	a, (iy + 4)
	ld	hl, 7
	ld	iy, (ix + 6)
	ld	e, (iy + 7)
	ld	d, (iy + 8)
	ld	iy, (ix + 6)
	ld	c, (iy + 9)
	push	hl
	inc	hl
	push	hl
	ld	hl, 14
	push	hl
	ld	l, c
	push	hl
	push	de
	ld	l, a
	push	hl
	ld	hl, (ix + -3)
	push	hl
	call	_optix_OutlinedRectangle_WithBevel
	ld	hl, 21
	add	hl, sp
	ld	sp, hl
BB6_7:
	or	a, a
	sbc	hl, hl
	ld	(ix + -12), hl
	ld	(ix + -3), hl
BB6_8:
	ld	iy, (ix + 6)
	ld	de, (iy + 35)
	push	de
	pop	hl
	ld	bc, (ix + -9)
	add	hl, bc
	push	hl
	pop	bc
	ld	hl, (ix + -3)
	or	a, a
	sbc	hl, bc
	ld	bc, 0
	call	__setflag
	jq	p, BB6_16
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	hl, (iy + 1)
	ld	(ix + -15), hl
	ld	a, (iy + 4)
	push	de
	pop	hl
	push	bc
	pop	iy
	ld	bc, -10
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix + -12)
	add	hl, bc
	push	hl
	pop	bc
	ld	hl, (ix + -3)
	or	a, a
	sbc	hl, de
	call	__setflag
	lea	hl, iy + 0
	jq	m, BB6_11
	push	bc
	pop	hl
BB6_11:
	add	a, l
	ld	l, a
	push	hl
	ld	hl, (ix + -15)
	push	hl
	call	_fontlib_SetCursorPosition
	pop	hl
	pop	hl
	ld	hl, 1
	push	hl
	ld	hl, (ix + -6)
	push	hl
	call	_optix_PrintStringWrapped_fontlibc
	ld	(ix + -15), hl
	pop	hl
	pop	hl
	ld	iy, (ix + 6)
	ld	de, (iy + 35)
	ld	hl, (ix + -3)
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	m, BB6_13
	ld	hl, (ix + -15)
	ld	de, (ix + -6)
	or	a, a
	sbc	hl, de
	inc	hl
	ld	(ix + -18), hl
	push	hl
	push	de
	call	_optix_GetStringWidthL
	ld	(ix + -24), hl
	pop	hl
	pop	hl
	call	_fontlib_GetCursorX
	ld	(ix + -21), hl
	ld	iy, (ix + 6)
	ld	a, (iy + 30)
	or	a, a
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, a
	ld	iy, (ix + 6)
	ld	c, (iy + 7)
	ld	b, (iy + 8)
	ld	l, c
	ld	h, b
	ld	bc, (ix + -24)
	or	a, a
	sbc	hl, bc
	ld	c, 1
	call	__ishru
	push	de
	pop	bc
	call	__imulu
	ld	de, (ix + -21)
	add	hl, de
	ld	(ix + -21), hl
	call	_fontlib_GetCursorY
	ld	l, a
	push	hl
	ld	hl, (ix + -21)
	push	hl
	call	_fontlib_SetCursorPosition
	pop	hl
	pop	hl
	ld	hl, (ix + -18)
	push	hl
	ld	hl, (ix + -6)
	push	hl
	call	_optix_DrawStringL
	pop	hl
	pop	hl
BB6_13:
	ld	hl, (ix + -15)
	ld	a, (hl)
	or	a, a
	jq	z, BB6_16
	ld	hl, (ix + -3)
	inc	hl
	ld	(ix + -3), hl
	ld	iy, (ix + 6)
	ld	de, (iy + 32)
	ld	bc, 10
	ld	hl, (ix + -12)
	add	hl, bc
	ld	(ix + -12), hl
	ld	bc, (ix + -15)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	ld	(ix + -6), bc
	jq	z, BB6_16
	jq	BB6_8
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_GetTextNumLines
_optix_GetTextNumLines:
	ld	hl, -3
	call	__frameset
	ld	iy, (ix + 6)
	or	a, a
	sbc	hl, hl
	ld	de, (iy + 32)
	ld	(ix + -3), de
	ld	(iy + 38), hl
	ld	hl, (iy + 1)
	ld	a, (iy + 4)
	ld	e, (iy + 7)
	ld	d, (iy + 8)
	ld	bc, 0
	ld	c, e
	ld	b, d
	ld	e, (iy + 9)
	push	de
	push	bc
	ld	e, a
	push	de
	push	hl
	call	_fontlib_SetWindow
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix + 6)
	ld	hl, (iy + 1)
	ld	a, (iy + 4)
	ld	e, a
	push	de
	push	hl
	call	_fontlib_SetCursorPosition
	pop	hl
	pop	hl
BB7_1:
	ld	hl, 1
	push	hl
	ld	hl, (ix + -3)
	push	hl
	call	_optix_PrintStringWrapped_fontlibc
	push	hl
	pop	de
	pop	hl
	pop	hl
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	hl, (iy + 38)
	inc	hl
	ld	(iy + 38), hl
	push	de
	pop	iy
	ld	a, (iy)
	or	a, a
	jq	z, BB7_4
	lea	hl, iy + 0
	ld	de, (ix + -3)
	or	a, a
	sbc	hl, de
	jq	z, BB7_4
	lea	bc, iy + 0
	ld	iy, (ix + 6)
	ld	de, (iy + 32)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	ld	(ix + -3), bc
	jq	nz, BB7_1
BB7_4:
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_optix_InitializeFont
_optix_InitializeFont:
	ld	hl, -3
	call	__frameset
	ld	hl, L_.str
	ld	de, 0
	push	de
	push	hl
	call	_fontlib_GetFontByIndex
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB8_2
	ld	de, 0
	push	de
	push	hl
	ld	(ix + -3), hl
	call	_fontlib_SetFont
	pop	hl
	pop	hl
	ld	hl, 25
	push	hl
	dec	hl
	push	hl
	call	_fontlib_SetColors
	pop	hl
	pop	hl
	ld	hl, 1
	push	hl
	call	_fontlib_SetTransparency
	pop	hl
	ld	hl, 2
	push	hl
	call	_fontlib_SetNewlineOptions
	ld	hl, (ix + -3)
	pop	de
BB8_2:
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB8_3
	ld	l, 0
	jq	BB8_5
BB8_3:
	ld	l, 1
BB8_5:
	ld	iy, (_current_context)
	ld	iy, (iy + 3)
	ld	a, l
	and	a, 1
	ld	(iy + 2), a
	ld	a, l
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	L_.str
L_.str:
	db	"DRSANS",000o

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	_optix_CheckTransformOverlap
	extern	__Unwind_SjLj_Register
	extern	_fontlib_GetGlyphWidth
	extern	_fontlib_SetTransparency
	extern	__frameset
	extern	_fontlib_GetFontByIndex
	extern	_fontlib_DrawGlyph
	extern	_fontlib_GetAlternateStopCode
	extern	_fontlib_DrawString
	extern	_fontlib_SetNewlineOptions
	extern	_gfx_GetStringWidth
	extern	_fontlib_GetWindowXMin
	extern	_fontlib_GetStringWidth
	extern	_fontlib_GetWindowWidth
	extern	_fontlib_SetColors
	extern	_fontlib_SetFont
	extern	_optix_OutlinedRectangle_WithBevel
	extern	_fontlib_SetWindow
	extern	_strlen
	extern	__ishru
	extern	_fontlib_GetFirstPrintableCodePoint
	extern	__setflag
	extern	_current_context
	extern	_fontlib_GetLastCharacterRead
	extern	__Unwind_SjLj_Unregister
	extern	__iand
	extern	_fontlib_DrawStringL
	extern	__imulu
	extern	_fontlib_SetAlternateStopCode
	extern	_fontlib_GetCurrentFontHeight
	extern	_fontlib_GetCursorX
	extern	_fontlib_GetCursorY
	extern	_fontlib_SetCursorPosition
	extern	_fontlib_ClearEOL
	extern	_optix_DefaultKeyIsDown
	extern	_gfx_PrintStringXY
	extern	__frameset0
	extern	_fontlib_GetStringWidthL
	extern	__bdivu
